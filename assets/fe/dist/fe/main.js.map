{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.states.ts","webpack:///./src/app/components/avatar/avatar.component.css","webpack:///./src/app/components/avatar/avatar.component.html","webpack:///./src/app/components/avatar/avatar.component.ts","webpack:///./src/app/components/containers/issueboard/issueboard.component.html","webpack:///./src/app/components/containers/issueboard/issueboard.component.scss","webpack:///./src/app/components/containers/issueboard/issueboard.component.ts","webpack:///./src/app/components/containers/scrumboard/scrumboard.component.css","webpack:///./src/app/components/containers/scrumboard/scrumboard.component.html","webpack:///./src/app/components/containers/scrumboard/scrumboard.component.ts","webpack:///./src/app/components/forms/create-team/create-team.component.css","webpack:///./src/app/components/forms/create-team/create-team.component.html","webpack:///./src/app/components/forms/create-team/create-team.component.ts","webpack:///./src/app/components/forms/login/login.component.html","webpack:///./src/app/components/forms/login/login.component.scss","webpack:///./src/app/components/forms/login/login.component.ts","webpack:///./src/app/components/header/header.component.html","webpack:///./src/app/components/header/header.component.scss","webpack:///./src/app/components/header/header.component.ts","webpack:///./src/app/components/marker/marker.component.html","webpack:///./src/app/components/marker/marker.component.scss","webpack:///./src/app/components/marker/marker.component.ts","webpack:///./src/app/components/prompts/join-team/join-team.component.css","webpack:///./src/app/components/prompts/join-team/join-team.component.html","webpack:///./src/app/components/prompts/join-team/join-team.component.ts","webpack:///./src/app/components/prompts/slack-login/slack-login.component.css","webpack:///./src/app/components/prompts/slack-login/slack-login.component.html","webpack:///./src/app/components/prompts/slack-login/slack-login.component.ts","webpack:///./src/app/constants/endpoints.ts","webpack:///./src/app/pipes/groupby-date.pipe.ts","webpack:///./src/app/services/api.service.ts","webpack:///./src/app/services/authentication.service.ts","webpack:///./src/app/services/data.service.ts","webpack:///./src/app/services/filter.service.ts","webpack:///./src/app/services/scrum-data.service.ts","webpack:///./src/app/services/search.service.ts","webpack:///./src/app/utils/layouts.utils.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,mB;;;;;;;;;;;ACAA,yD;;;;;;;;;;;;;;;;;;;;;ACA0C;AAO1C;IALA;QAME,UAAK,GAAG,KAAK,CAAC;IAChB,CAAC;IAFY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPzB,kBAAkB;AACwC;AACjB;AACI;AACiC;AAG9E,oBAAoB;AACkC;AACH;AACM;AACF;AACC;AACM;AACF;AACJ;AACuB;AAE/E,wBAAwB;AACoB;AACK;AAC4C;AACJ;AACM;AACC;AACvB;AACuB;AACvB;AACA;AACb;AACc;AAsC1E;IAAA;IAAyB,CAAC;IAAb,SAAS;QAnCrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,+DAAY;gBACZ,uGAAiB;gBACjB,2GAAmB;gBACnB,6GAAmB;gBACnB,8GAAmB;gBACnB,uFAAe;gBACf,8GAAmB;gBACnB,uFAAe;gBACf,uFAAe;gBACf,yEAAe;gBACf,uFAAc;aACf;YACD,OAAO,EAAE;gBACP,oEAAS,CAAC,OAAO,EAAE;gBACnB,uEAAa;gBACb,qEAAgB;gBAChB,6FAAuB;gBACvB,sEAAgB;gBAChB,qEAAc,CAAC,OAAO,EAAE;gBACxB,2EAAkB,CAAC,OAAO,EAAE;gBAC5B,0EAAgB,CAAC,OAAO,EAAE;gBAC1B,yEAAoB,CAAC,WAAW,CAAC;oBAC/B,UAAU,EAAE,WAAW;oBACvB,UAAU,EAAE,aAAa;iBAC1B,CAAC;gBACF,gEAAc,CAAC,OAAO,CAAC,0DAAU,CAAC;gBAClC,0DAAW;gBACX,mEAAe;gBACf,sEAAqB,CAAC,OAAO,EAAE;aAChC;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,+DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;ACpE+B;AAI0C;AACA;AACpB;AAE3E,sCAAsC;AACtC,QAAQ;AACR,+BAA+B;AAC/B,0BAA0B;AAC1B,mDAAmD;AACnD,QAAQ;AACR,IAAI;AAEJ,oCAAoC;AACpC,QAAQ;AACR,6BAA6B;AAC7B,wBAAwB;AACxB,iDAAiD;AACjD,QAAQ;AACR,IAAI;AAEJ,IAAI,UAAU,GAAa;IACvB;QACI,IAAI,EAAE,YAAY;QAClB,GAAG,EAAE,GAAG;QACR,KAAK,EAAE,2EAAW,CAAC,6GAAmB,CAAC;KAC1C;CACJ;AAED,IAAI,YAAY,GAAa;IACzB;QACI,IAAI,EAAE,aAAa;QACnB,GAAG,EAAE,SAAS;QACd,KAAK,EAAE,2EAAW,CAAC,6GAAmB,CAAC;KAC1C;CACJ;AAED,IAAI,WAAW,GAAa;IACxB;QACI,IAAI,EAAE,OAAO;QACb,GAAG,EAAE,QAAQ;QACb,KAAK,EAAE,2EAAW,CAAC,yFAAc,CAAC;KACrC;CACJ;AAEM,IAAM,UAAU,GAAG;IACzB,SAAS,EAAE,GAAG;IACd,MAAM,EAAE,EAAE,CAAC,MAAM;IAChB,qBAAqB;IACrB,yBAAyB;IACnB,UAAU,EACV,YAAY,EACZ,WAAW,CACjB;CACD;;;;;;;;;;;;ACzDD,0BAA0B,qBAAqB,QAAQ,uBAAuB,sBAAsB,iCAAiC,OAAO,C;;;;;;;;;;;ACA5I,iLAAiL,uBAAuB,a;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA5J;AACa;AACY;AAOrE;IAKE,yBACY,gBAAkC;QAAlC,qBAAgB,GAAhB,gBAAgB,CAAkB;IAC1C,CAAC;IAEL,kCAAQ,GAAR;IAEA,CAAC;IAED,kCAAQ,GAAR,UAAS,EAAU;QACf,EAAE,EAAC,CAAC,EAAE,CAAC,EAAC;YACJ,EAAE,GAAG,MAAM;QACf,CAAC;QACD,MAAM,CAAC,4CAAQ,CAAC,EAAE,CAAC;IACvB,CAAC;IAED,qCAAW,GAAX,UAAY,QAAgB;QACxB,EAAE,EAAC,CAAC,QAAQ,CAAC,EAAC;YACV,MAAM,CAAC,IAAI;QACf,CAAC;QACD,OAAO;QACP,EAAE,EAAE,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,EAAC;YAC7B,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE;gBAC/B,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE;QAC1C,CAAC;QACH,IAAI,WAAW,GAAG,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAEtC,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE;YACrC,WAAW,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE;IAClD,CAAC;IA/BQ;QAAR,2DAAK,EAAE;;+CAAG;IACF;QAAR,2DAAK,EAAE;;qDAAS;IAHN,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;;;SAGvB,CAAC;yCAO8B,6EAAgB;OANnC,eAAe,CAkC3B;IAAD,sBAAC;CAAA;AAlC2B;;;;;;;;;;;;ACT5B,s5DAAs5D,gBAAgB,smBAAsmB,iBAAiB,+kHAA+kH,eAAe,yBAAyB,sEAAsE,mDAAmD,kBAAkB,eAAe,iCAAiC,MAAM,+BAA+B,i+BAAi+B,0BAA0B,spCAAspC,kCAAkC,0IAA0I,mDAAmD,mSAAmS,iCAAiC,wRAAwR,eAAe,0PAA0P,qCAAqC,KAAK,oCAAoC,ipBAAipB,kCAAkC,kKAAkK,mDAAmD,2cAA2c,aAAa,ohBAAohB,kCAAkC,olE;;;;;;;;;;;ACA7iX,qCAAqC,wBAAwB,EAAE,gBAAgB,qBAAqB,EAAE,oBAAoB,4BAA4B,uBAAuB,sDAAsD,EAAE,oBAAoB,eAAe,iBAAiB,qBAAqB,8BAA8B,EAAE,kBAAkB,8BAA8B,EAAE,YAAY,oBAAoB,mBAAmB,EAAE,qBAAqB,mBAAmB,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA7a;AACA;AACM;AACI;AACgB;AAGX;AAEhB;AAOjD;IAyBE,6BACY,IAAgB,EAChB,aAA4B,EAC5B,WAAwB,EACxB,YAA0B,EAC1B,WAAkC;QAJlC,SAAI,GAAJ,IAAI,CAAY;QAChB,kBAAa,GAAb,aAAa,CAAe;QAC5B,gBAAW,GAAX,WAAW,CAAa;QACxB,iBAAY,GAAZ,YAAY,CAAc;QAC1B,gBAAW,GAAX,WAAW,CAAuB;QA5B9C,UAAK,GAAS,IAAI,IAAI,EAAE,CAAC;QAEzB,cAAS,GAAS,IAAI,IAAI,EAAE,CAAC;QAC7B,gBAAW,GAAS,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,EACrC,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,EACzB,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,GAAC,CAAC,CAAC,CAAC;QAE9C,eAAU,GAAQ;YAChB,IAAI,EAAE;gBACJ,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE;gBACpC,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,GAAG,CAAC;gBACtC,GAAG,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE;aAChC;SACF,CAAC;QAEF,aAAQ,GAAQ;YACd,IAAI,EAAE;gBACJ,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE;gBAClC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,GAAG,CAAC;gBACpC,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE;aAC9B;SACF,CAAC;QAgBJ,gBAAW,GAAG,EAAE;QAChB,mBAAc,GAAG,EAAE;QAEnB,kBAAa,GAAG,EAAE;QAElB,mBAAc,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,EACpC,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,EAC3B,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,GAAC,CAAC,CAAC;QAEjD,gBAAW,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,EAC/B,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,EACzB,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,GAAC,CAAC,CAAC;QAE/C,kBAAa,GAAG;YACV,IAAI,EAAE,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE;YACvC,KAAK,EAAE,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,GAAG,CAAC;YACzC,GAAG,EAAE,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE;SACnC;QAEL,gBAAW,GAAG;YACR,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE;YACpC,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,GAAG,CAAC;YACtC,GAAG,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE;SAChC;QAEL,gBAAW,GAAoB;YAC3B,UAAU,EAAE,aAAa;YACzB,YAAY,EAAE,IAAI,CAAC,WAAW;SACjC,CAAC;QAEF,cAAS,GAAoB;YACzB,UAAU,EAAE,aAAa;YACzB,YAAY,EAAE,IAAI,CAAC,aAAa;SACnC,CAAC;IAzCE,CAAC;IA2CL,sCAAQ,GAAR;QACI,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE;QAC/B,IAAI,CAAC,WAAW,EAAE;QAClB,IAAI,CAAC,aAAa,EAAE;QACpB,IAAI,CAAC,UAAU,EAAE;IACrB,CAAC;IAED,yCAAW,GAAX;QAAA,iBAOC;QANG,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE;aACzB,SAAS,CACN,cAAI;YACA,KAAI,CAAC,MAAM,GAAG,IAAI;QACtB,CAAC,CACJ,CAAC;IACV,CAAC;IAED,wCAAU,GAAV;QAAA,iBAOC;QANG,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE;aACxB,SAAS,CACN,cAAI;YACA,KAAI,CAAC,KAAK,GAAG,IAAI;QACrB,CAAC,CACJ,CAAC;IACV,CAAC;IAED,2CAAa,GAAb;QAAA,iBAOC;QANG,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE;aAC3B,SAAS,CACN,cAAI;YACA,KAAI,CAAC,QAAQ,GAAG,IAAI;QACxB,CAAC,CACJ,CAAC;IACV,CAAC;IAED,+CAAiB,GAAjB,UAAkB,IAAI;QAClB,IAAI,CAAC,WAAW,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EACd,IAAI,CAAC,IAAI,CAAC,KAAK,GAAC,CAAC,EACjB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAE3C,IAAI,SAAS,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,EACvC,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,EAC3B,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,GAAC,CAAC,CAAC;QAE7C,IAAI,CAAC,aAAa,CAAC,IAAI,GAAG,SAAS,CAAC,WAAW,EAAE;QACjD,IAAI,CAAC,aAAa,CAAC,KAAK,GAAG,SAAS,CAAC,QAAQ,EAAE,GAAC,CAAC;QACjD,IAAI,CAAC,aAAa,CAAC,GAAG,GAAG,SAAS,CAAC,OAAO,EAAE;IAChD,CAAC;IAED,6CAAe,GAAf,UAAgB,EAAE;QACd,IAAI,CAAC,SAAS,GAAG,IAAI,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,EACV,EAAE,CAAC,IAAI,CAAC,KAAK,GAAC,CAAC,EACf,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAEzC,IAAI,QAAQ,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,EACpC,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,EACzB,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,GAAC,CAAC,CAAC;QAE3C,IAAI,CAAC,WAAW,CAAC,IAAI,GAAG,QAAQ,CAAC,WAAW,EAAE;QAC9C,IAAI,CAAC,WAAW,CAAC,KAAK,GAAG,QAAQ,CAAC,QAAQ,EAAE,GAAC,CAAC;QAC9C,IAAI,CAAC,WAAW,CAAC,GAAG,GAAG,QAAQ,CAAC,OAAO,EAAE;IAC7C,CAAC;IAED,0CAAY,GAAZ,UAAa,EAAE,EAAE,MAAM;QACnB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,mFAAmB,CAAC,EAAE,CAAC,EAAE,EAAC,QAAQ,EAAC,MAAM,EAAC,CAAC;aACzD,SAAS,EAAE,CAAC;QACb,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,eAAK;YACpC,MAAM,CAAC,KAAK,CAAC,EAAE,IAAI,EAAE;QACxB,CAAC,CAAC;QACF,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,MAAM;IACtC,CAAC;IAED,4CAAc,GAAd,UAAe,EAAE,EAAE,QAAQ;QACvB,EAAE,CAAC,CAAC,QAAQ,CAAC,EAAC;YACZ,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,qFAAqB,CAAC,EAAE,CAAC,EAAE,EAAC,UAAU,EAAC,QAAQ,EAAC,CAAC;iBAC/D,SAAS,EAAE,CAAC;QACf,CAAC;IACL,CAAC;IAED,0CAAY,GAAZ,UAAa,UAAU,EAAE,WAAW,EAAE,SAAS;QAC7C,MAAM,CAAC,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,IAAI,WAAW,CAAC,QAAQ,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC;YACvE,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,IAAI,SAAS,CAAC,QAAQ,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,CAAC;IAChF,CAAC;IAED,2CAAa,GAAb;QACE,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,YAAY,CAAC,CAAC;IACrC,CAAC;IA/JU,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;;;SAG3B,CAAC;yCA2BkB,+DAAU;YACD,yEAAa;YACf,qEAAW;YACV,8DAAY;YACb,yFAAqB;OA9BnC,mBAAmB,CAiK/B;IAAD,0BAAC;CAAA;AAjK+B;;;;;;;;;;;;AChBhC,mCAAmC,kCAAkC,GAAG,aAAa,qBAAqB,GAAG,WAAW,qBAAqB,GAAG,iBAAiB,wDAAwD,GAAG,aAAa,sBAAsB,GAAG,oBAAoB,mBAAmB,GAAG,iBAAiB,eAAe,iBAAiB,8BAA8B,GAAG,iBAAiB,uBAAuB,yBAAyB,GAAG,iBAAiB,uBAAuB,yBAAyB,qBAAqB,GAAG,kBAAkB,mBAAmB,GAAG,oBAAoB,4BAA4B,GAAG,C;;;;;;;;;;;ACAtnB,i9BAAi9B,aAAa,oHAAoH,kBAAkB,cAAc,yBAAyB,weAAwe,0MAA0M,gBAAgB,+bAA+b,gMAAgM,iBAAiB,2jBAA2jB,2zBAA2zB,wiDAAwiD,eAAe,yBAAyB,sEAAsE,mDAAmD,kBAAkB,eAAe,iCAAiC,MAAM,+BAA+B,iqCAAiqC,4CAA4C,w/BAAw/B,cAAc,0JAA0J,wCAAwC,8UAA8U,iBAAiB,mgBAAmgB,6BAA6B,oQAAoQ,eAAe,2WAA2W,iBAAiB,+tBAA+tB,eAAe,mnBAAmnB,eAAe,00CAA00C,eAAe,w2CAAw2C,mCAAmC,KAAK,oCAAoC,m8BAAm8B,kCAAkC,6+GAA6+G,kCAAkC,sFAAsF,iCAAiC,2EAA2E,mDAAmD,2LAA2L,eAAe,2T;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAtjlB;AACkB;AACA;AAGM;AAEI;AACA;AACgB;AAC3B;AAGgB;AAOjE;IA0BE,6BACY,IAAgB,EAChB,aAA4B,EAC5B,aAA4B,EAC5B,WAAwB,EACxB,YAA0B,EAC1B,WAAkC;QALlC,SAAI,GAAJ,IAAI,CAAY;QAChB,kBAAa,GAAb,aAAa,CAAe;QAC5B,kBAAa,GAAb,aAAa,CAAe;QAC5B,gBAAW,GAAX,WAAW,CAAa;QACxB,iBAAY,GAAZ,YAAY,CAAc;QAC1B,gBAAW,GAAX,WAAW,CAAuB;QA9B9C,UAAK,GAAS,IAAI,IAAI,EAAE,CAAC;QAEzB,cAAS,GAAS,IAAI,IAAI,EAAE,CAAC;QAC7B,gBAAW,GAAS,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,EACrC,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,EACzB,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,GAAC,CAAC,CAAC,CAAC;QAE9C,eAAU,GAAQ;YAChB,IAAI,EAAE;gBACJ,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE;gBACpC,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,GAAG,CAAC;gBACtC,GAAG,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE;aAChC;SACF,CAAC;QAEF,aAAQ,GAAQ;YACd,IAAI,EAAE;gBACJ,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE;gBAClC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,GAAG,CAAC;gBACpC,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE;aAC9B;SACF,CAAC;QAiBJ,gBAAW,GAAG,EAAE;QAChB,mBAAc,GAAG,EAAE;QAInB,mBAAc,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,EACpC,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,EAC3B,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,GAAC,CAAC,CAAC;QAEjD,gBAAW,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,EAC/B,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,EACzB,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,GAAC,CAAC,CAAC;QAE/C,kBAAa,GAAG;YACV,IAAI,EAAE,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE;YACvC,KAAK,EAAE,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,GAAG,CAAC;YACzC,GAAG,EAAE,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE;SACnC;QAEL,gBAAW,GAAG;YACR,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE;YACpC,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,GAAG,CAAC;YACtC,GAAG,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE;SAChC;QAEL,gBAAW,GAAoB;YAC3B,UAAU,EAAE,aAAa;YACzB,YAAY,EAAE,IAAI,CAAC,WAAW;SACjC,CAAC;QAEF,cAAS,GAAoB;YACzB,UAAU,EAAE,aAAa;YACzB,YAAY,EAAE,IAAI,CAAC,aAAa;SACnC,CAAC;QAEF,UAAK,GAAQ,EAAC,SAAS,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI;YACvB,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAC,CAAC;QAEnD,gBAAW,GAAG;YACZ,EAAE,EAAE,EAAE;YACN,IAAI,EAAE,IAAI;SACX,CAAC;IAhDE,CAAC;IAsDL,sCAAQ,GAAR;QACI,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE;QAC/B,IAAI,CAAC,WAAW,GAAG,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC;QAC/C,IAAI,CAAC,WAAW,EAAE;QAClB,IAAI,CAAC,WAAW,EAAE;QAClB,IAAI,CAAC,UAAU,EAAE;QACjB,IAAI,CAAC,aAAa,EAAE;IACxB,CAAC;IAED,yCAAW,GAAX;QAAA,iBAkBC;QAjBG,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE;aACzB,SAAS,CACN,cAAI;YACA,KAAI,CAAC,aAAa,GAAG,IAAI;YACzB,IAAI,MAAM,GAAG,8CAAK,CAAC,KAAI,CAAC,aAAa,EAAE,eAAK,IAAK,MAAM,CAAC,KAAK,CAAC,MAAM,GAAC,CAAC;YACtE,OAAO,CAAC,GAAG,CAAC,+CAAM,CAAC,MAAM,EAAE,IAAI,EAAE,cAAc,CAAC,CAAC;YACjD,kCAAkC;YAClC,qCAAqC;YACrC,sCAAsC;YACtC,yCAAyC;YACzC,qBAAqB;YACrB,mBAAmB;YACnB,OAAO;YACP,KAAK;YACL,KAAI,CAAC,cAAc,GAAG,IAAI;QAC9B,CAAC,CACJ,CAAC;IACV,CAAC;IAED,yCAAW,GAAX;QAAA,iBAOC;QANG,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE;aACzB,SAAS,CACN,cAAI;YACA,KAAI,CAAC,MAAM,GAAG,IAAI;QACtB,CAAC,CACJ,CAAC;IACV,CAAC;IAED,wCAAU,GAAV;QAAA,iBAOC;QANG,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE;aACxB,SAAS,CACN,cAAI;YACA,KAAI,CAAC,KAAK,GAAG,IAAI;QACrB,CAAC,CACJ,CAAC;IACV,CAAC;IAED,2CAAa,GAAb;QAAA,iBAOC;QANG,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE;aAC3B,SAAS,CACN,cAAI;YACA,KAAI,CAAC,QAAQ,GAAG,IAAI;QACxB,CAAC,CACJ,CAAC;IACV,CAAC;IAED,+CAAiB,GAAjB,UAAkB,IAAI;QAClB,IAAI,CAAC,WAAW,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EACd,IAAI,CAAC,IAAI,CAAC,KAAK,GAAC,CAAC,EACjB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAE3C,IAAI,SAAS,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,EACvC,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,EAC3B,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,GAAC,CAAC,CAAC;QAE7C,IAAI,CAAC,aAAa,CAAC,IAAI,GAAG,SAAS,CAAC,WAAW,EAAE;QACjD,IAAI,CAAC,aAAa,CAAC,KAAK,GAAG,SAAS,CAAC,QAAQ,EAAE,GAAC,CAAC;QACjD,IAAI,CAAC,aAAa,CAAC,GAAG,GAAG,SAAS,CAAC,OAAO,EAAE;IAChD,CAAC;IAED,6CAAe,GAAf,UAAgB,EAAE;QACd,IAAI,CAAC,SAAS,GAAG,IAAI,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,EACV,EAAE,CAAC,IAAI,CAAC,KAAK,GAAC,CAAC,EACf,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAEzC,IAAI,QAAQ,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,EACpC,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,EACzB,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,GAAC,CAAC,CAAC;QAE3C,IAAI,CAAC,WAAW,CAAC,IAAI,GAAG,QAAQ,CAAC,WAAW,EAAE;QAC9C,IAAI,CAAC,WAAW,CAAC,KAAK,GAAG,QAAQ,CAAC,QAAQ,EAAE,GAAC,CAAC;QAC9C,IAAI,CAAC,WAAW,CAAC,GAAG,GAAG,QAAQ,CAAC,OAAO,EAAE;IAC7C,CAAC;IAED,sCAAQ,GAAR,UAAS,EAAE;QACP,IAAI,CAAC,cAAc,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,eAAK;gBAChD,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,eAAK;oBACvB,MAAM,CAAC,KAAK,CAAC,EAAE,IAAI,EAAE;gBACxB,CAAC,CAAC;YACd,CAAC,CAAC,CAAC;IACP,CAAC;IAED,0CAAY,GAAZ,UAAa,EAAE,EAAE,MAAM;QACnB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,mFAAmB,CAAC,EAAE,CAAC,EAAE,EAAC,QAAQ,EAAC,MAAM,EAAC,CAAC;aACzD,SAAS,EAAE,CAAC;QACb,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,eAAK;YACpC,MAAM,CAAC,KAAK,CAAC,EAAE,IAAI,EAAE;QACxB,CAAC,CAAC;QACF,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,MAAM;QAClC,IAAI,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,eAAK;YAClD,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,eAAK;gBAC3B,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,eAAK;oBAC9B,MAAM,CAAC,KAAK,CAAC,EAAE,IAAI,EAAE;gBACxB,CAAC,CAAC;YACN,CAAC,CAAC;QACJ,CAAC,CAAC;QACF,IAAI,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,eAAK;YACrE,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,eAAK;gBAC9B,MAAM,CAAC,KAAK,CAAC,EAAE,IAAI,EAAE;YACxB,CAAC,CAAC;QACN,CAAC,CAAC;QACF,IAAI,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,UAAU,CAAC,SAAS,CAAC,eAAK;YAC7F,MAAM,CAAC,KAAK,CAAC,EAAE,IAAI,EAAE;QACxB,CAAC,CAAC;QACF,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,WAAW,EAAC,CAAC,CAAC;IACxF,CAAC;IAED,4CAAc,GAAd,UAAe,EAAE,EAAE,QAAQ;QACvB,EAAE,CAAC,CAAC,QAAQ,CAAC,EAAC;YACZ,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,qFAAqB,CAAC,EAAE,CAAC,EAAE,EAAC,UAAU,EAAC,QAAQ,EAAC,CAAC;iBAC/D,SAAS,EAAE,CAAC;QACf,CAAC;IACL,CAAC;IAED,0CAAY,GAAZ,UAAa,UAAU,EAAE,WAAW,EAAE,SAAS;QAC7C,MAAM,CAAC,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,IAAI,WAAW,CAAC,QAAQ,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC;YACvE,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,IAAI,SAAS,CAAC,QAAQ,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,CAAC;IAChF,CAAC;IAED,2CAAa,GAAb,UAAc,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,EAAE;QACnC,IAAI,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,CAAC,aAAa,CAAC;QAC/F,MAAM,CAAC,aAAa,CAAC,GAAG,CAAC,eAAK,IAAI,YAAK,CAAC,KAAK,EAAX,CAAW,CAAC,CAAC,MAAM,CAAC,UAAC,CAAC,EAAC,CAAC,IAAK,QAAC,CAAC,CAAC,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC,EAAT,CAAS,EAAE,CAAC,CAAC;IAC9E,CAAC;IAED,sCAAQ,GAAR,UAAS,OAAO;QACd,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,OAAO,EAAE,IAAI,CAAC,aAAa,CAAC;IACpF,CAAC;IAED,oBAAoB;IACpB,oDAAoD;IACpD,wDAAwD;IACxD,qBAAqB;IACrB,qDAAqD;IACrD,yDAAyD;IACzD,qBAAqB;IACrB,mDAAmD;IACnD,uDAAuD;IACvD,qBAAqB;IACrB,yDAAyD;IACzD,4DAA4D;IAC5D,qDAAqD;IACrD,IAAI;IAEJ,wCAAU,GAAV,UAAW,KAAK;QACd,IAAI,OAAO,GAAG,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC,eAAK;YACxB,MAAM,CAAC,KAAK,CAAC,MAAM,IAAI,GAAG;QAC/B,CAAC,CAAC;QAChB,MAAM,CAAC,CAAC,OAAO,CAAC,MAAM,IAAE,CAAC,CAAC;IAC5B,CAAC;IAED,wCAAU,GAAV;QACE,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,aAAa,CAAC,CAAC;IACtC,CAAC;IAzPU,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;;;SAG3B,CAAC;yCA4BkB,+DAAU;YACD,yEAAa;YACb,yEAAa;YACf,qEAAW;YACV,8DAAY;YACb,yFAAqB;OAhCnC,mBAAmB,CA2P/B;IAAD,0BAAC;CAAA;AA3P+B;;;;;;;;;;;;ACpBhC,mB;;;;;;;;;;;ACAA,uM;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAGS;AAO3D;IAEE,6BACY,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;IAC9B,CAAC;IAEL,sCAAQ,GAAR;IAEA,CAAC;IAED,wCAAU,GAAV,UAAW,cAAsB;QAC7B,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,UAAU,EAAE,cAAc,CAAC,KAAK,CAAC,CAAC;IAC7D,CAAC;IAZU,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;;;SAG5B,CAAC;yCAIwB,gEAAU;OAHvB,mBAAmB,CAa/B;IAAD,0BAAC;CAAA;AAb+B;;;;;;;;;;;;ACVhC,oMAAoM,iBAAiB,knB;;;;;;;;;;;ACArN,oCAAoC,kBAAkB,EAAE,iBAAiB,iBAAiB,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;ACA1C;AACD;AAC2B;AAO5E;IAEE,wBACY,YAA0B,EAC1B,WAAkC;QADlC,iBAAY,GAAZ,YAAY,CAAc;QAC1B,gBAAW,GAAX,WAAW,CAAuB;IAC1C,CAAC;IAEL,iCAAQ,GAAR;QACI,EAAE,EAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAAC;YAC/B,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,YAAY,CAAC;QACpC,CAAC;IACL,CAAC;IAID,8BAAK,GAAL,UAAM,QAAQ,EAAE,QAAQ;QAAxB,iBASC;QARK,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,EAAC,UAAU,EAAC,QAAQ,CAAC,KAAK,EAAE,UAAU,EAAC,QAAQ,CAAC,KAAK,EAAC,CAAC;aACzE,SAAS,CAAC;YACP,YAAY,CAAC,OAAO,CAAC,MAAM,EAAC,QAAQ,CAAC,KAAK,CAAC;YAC3C,KAAI,CAAC,YAAY,CAAC,EAAE,CAAC,YAAY,CAAC;QAAA,CAAC,EACnC;YACA,KAAI,CAAC,eAAe,GAAC,8BAA8B;QACnD,CAAC,CACJ;IACf,CAAC;IAxBU,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;SAGtB,CAAC;yCAI0B,8DAAY;YACb,yFAAqB;OAJnC,cAAc,CA2B1B;IAAD,qBAAC;CAAA;AA3B0B;;;;;;;;;;;;ACT3B,sc;;;;;;;;;;;ACAA,mB;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,kCAAQ,GAAR;IACA,CAAC;IALU,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;;;SAGvB,CAAC;;OACW,eAAe,CAO3B;IAAD,sBAAC;CAAA;AAP2B;;;;;;;;;;;;ACP5B,iG;;;;;;;;;;;ACAA,2BAA2B,eAAe,iBAAiB,qBAAqB,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;ACAtC;AACa;AAOzD;IAIE;IAAgB,CAAC;IAEjB,kCAAQ,GAAR;IACA,CAAC;IAED,kCAAQ,GAAR,UAAS,OAAe;QACpB,EAAE,EAAC,CAAC,OAAO,CAAC,EAAC;YACT,OAAO,GAAG,aAAa;QAC3B,CAAC;QACD,MAAM,CAAC,4CAAQ,CAAC,OAAO,CAAC;IAC5B,CAAC;IAZQ;QAAR,2DAAK,EAAE;;oDAAQ;IAFL,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;;;SAGvB,CAAC;;OACW,eAAe,CAe3B;IAAD,sBAAC;CAAA;AAf2B;;;;;;;;;;;;ACR5B,mB;;;;;;;;;;;ACAA,kD;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,oCAAQ,GAAR;IACA,CAAC;IALU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;;;SAG1B,CAAC;;OACW,iBAAiB,CAO7B;IAAD,wBAAC;CAAA;AAP6B;;;;;;;;;;;;ACP9B,mB;;;;;;;;;;;ACAA,oJ;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAIjB,sCAAQ,GAAR;IAEA,CAAC;IARU,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;;;SAG5B,CAAC;;OACW,mBAAmB,CAU/B;IAAD,0BAAC;CAAA;AAV+B;;;;;;;;;;;;;;;;;;;;ACPhC;AAAA,IAAI,OAAO,GAAG,WAAW;AAElB,IAAM,QAAQ,GAAG,cAAM,oBAAa,EAAb,CAAa,CAAC;AACrC,IAAM,UAAU,GAAG,cAAM,2BAAoB,EAApB,CAAoB,CAAC;AAC9C,IAAM,gBAAgB,GAAG,cAAM,6BAAsB,GAAC,OAAO,GAAC,GAAG,EAAlC,CAAkC,CAAC;AAClE,IAAM,iBAAiB,GAAG,cAAM,gCAAyB,GAAC,OAAO,GAAC,GAAG,EAArC,CAAqC,CAAC;AACtE,IAAM,mBAAmB,GAAG,UAAC,EAAE,IAAK,kCAA2B,GAAC,EAAE,EAA9B,CAA8B,CAAC;AACnE,IAAM,qBAAqB,GAAG,UAAC,EAAE,IAAK,oCAA6B,GAAC,EAAE,EAAhC,CAAgC,CAAC;AACvE,IAAM,UAAU,GAAG,cAAM,6BAAsB,EAAtB,CAAsB,CAAC;;;;;;;;;;;;;;;;;;;;;;ACRH;AAKpD;IAAA;IASA,CAAC;IAPC,mCAAS,GAAT,UAAU,KAAe,EAAE,QAAgB;QACvC,EAAE,EAAC,CAAC,KAAK,CAAC,EAAC;YACP,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;IAEL,CAAC;IAPU,eAAe;QAH3B,0DAAI,CAAC;YACJ,IAAI,EAAE,aAAa;SACpB,CAAC;OACW,eAAe,CAS3B;IAAD,sBAAC;CAAA;AAT2B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLe;AACO;AACF;AAEhD,uDAAuD;AAKvD;IAEE,oBACY,IAAgB,EAChB,YAA0B;QAD1B,SAAI,GAAJ,IAAI,CAAY;QAChB,iBAAY,GAAZ,YAAY,CAAc;QAGtC,UAAK,GAAC,EAAE;IAFJ,CAAC;IAIL,6BAAQ,GAAR,UAAS,QAAQ;QAAjB,iBAOC;QANG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC;aAClB,SAAS,CACN,cAAI;YACA,KAAI,CAAC,KAAK,GAAG,IAAI;QACrB,CAAC,CACJ,CAAC;IACV,CAAC;IAED,6BAAQ,GAAR;QACE,MAAM,CAAC,IAAI,CAAC,KAAK;IACnB,CAAC;IAED,2BAAM,GAAN,UAAO,QAAQ,EAAE,IAAI;QACjB,0DAA0D;QAC1D,6CAA6C;QAC7C,cAAc;QACd,iCAAiC;QACjC,iDAAiD;QACjD,KAAK;IACT,CAAC;IA7BU,UAAU;QAHtB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAIkB,+DAAU;YACF,8DAAY;OAJ3B,UAAU,CA+BtB;IAAD,iBAAC;CAAA;AA/BsB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACToB;AACO;AACD;AAEI;AAKrD;IAEE,+BACY,YAA0B,EAC1B,IAAgB;QADhB,iBAAY,GAAZ,YAAY,CAAc;QAC1B,SAAI,GAAJ,IAAI,CAAY;IACxB,CAAC;IAEL,yCAAS,GAAT,UAAU,WAAW;QACjB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,0EAAU,EAAE,EAAC,WAAW,CAAC;IACnD,CAAC;IAED,4CAAY,GAAZ;QACI,EAAE,EAAC,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAAC;YAChC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,OAAO,CAAC;QAC/B,CAAC;IACL,CAAC;IAfU,qBAAqB;QAHjC,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAI0B,8DAAY;YACpB,+DAAU;OAJjB,qBAAqB,CAgBjC;IAAD,4BAAC;CAAA;AAhBiC;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTS;AACO;AAKS;AAK3D;IAEE,qBACY,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IACxB,CAAC;IAML,iCAAW,GAAX;QACI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,wEAAQ,EAAE,CAAC;IACpC,CAAC;IAED,gCAAU,GAAV;QACI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,gFAAgB,EAAE,CAAC;IAC5C,CAAC;IAED,mCAAa,GAAb;QACI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,iFAAiB,EAAE,CAAC;IAC7C,CAAC;IAED,iCAAW,GAAX;QACI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,0EAAU,EAAE,CAAC;IACtC,CAAC;IAED,+BAAS,GAAT;QACI,MAAM,CAAC,IAAI,CAAC,UAAU;IAC1B,CAAC;IAED,8BAAQ,GAAR;QACI,MAAM,CAAC,IAAI,CAAC,KAAK;IACrB,CAAC;IAED,iCAAW,GAAX;QACI,MAAM,CAAC,IAAI,CAAC,QAAQ;IACxB,CAAC;IAED,+BAAS,GAAT,UAAU,UAAU;QAChB,IAAI,CAAC,UAAU,GAAG,UAAU;IAChC,CAAC;IAxCU,WAAW;QAHvB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAIkB,+DAAU;OAHjB,WAAW,CA0CvB;IAAD,kBAAC;CAAA;AA1CuB;;;;;;;;;;;;;;;;;;;;;;;;;ACXmB;AAK3C;IAEE;QAEA,aAAQ,GAAG,EAAE;IAFG,CAAC;IAIjB,mCAAW,GAAX,UAAY,QAAQ,EAAE,OAAO,EAAE,IAAI,EAAE,EAAE,EAAE,MAAM;QAC3C,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,eAAK;YACxB,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC;YACvC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC;YACtB,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC;gBACpC,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC;gBAC/B,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE,CAAC;QAC9B,CAAC,CAAC;IACN,CAAC;IAED,yCAAiB,GAAjB,UAAkB,OAAO,EAAE,MAAM;QAC7B,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,eAAK;YACxB,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC;YACvC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC;YACtB,IAAI,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,aAAG;gBACxB,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,MAAM,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC;YAC1D,CAAC,CAAC;YAClB,IAAI,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,aAAG;gBACtB,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,MAAM,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC;YAC1D,CAAC,CAAC;YAClB,IAAI,UAAU,GAAG,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC,aAAG;gBAC1B,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,MAAM,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC;oBACtD,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,MAAM,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC;YAClD,CAAC,CAAC;YAClB,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,MAAM,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC;gBACvD,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,MAAM,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC;gBACnD,SAAS,CAAC,MAAM,IAAE,CAAC,IAAI,QAAQ,CAAC,MAAM,IAAE,CAAC;gBACzC,UAAU,CAAC,MAAM,IAAE,CAAC;QACtB,CAAC,CAAC;IACN,CAAC;IAED,oCAAY,GAAZ,UAAa,MAAM,EAAE,cAAc,EAAE,QAAQ,EAAE,OAAO,EAAE,MAAM;QAC1D,EAAE,CAAC,CAAC,MAAM,KAAK,KAAK,CAAC,CAAC,CAAC;YACrB,MAAM,GAAG,EAAE;QACb,CAAC;QAED,EAAE,CAAC,CAAC,QAAQ,KAAK,KAAK,CAAC,CAAC,CAAC;YACvB,QAAQ,GAAG,EAAE;QACf,CAAC;QAED,EAAE,CAAC,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;YACtB,OAAO,GAAG,EAAE;QACd,CAAC;QAED,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,GAAG,GAAG,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;QAC9H,IAAI,EAAE,GAAG,IAAI,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,GAAG,GAAG,GAAG,cAAc,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,cAAc,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC;QAEtH,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,eAAK;YACxB,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC;YACvC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC;YACtB,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC;gBACpC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC;gBAC7B,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC;gBAC/B,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE,CAAC;QAC9B,CAAC,CAAC;IACN,CAAC;IAED,kCAAU,GAAV,UAAW,EAAE,EAAE,MAAM;QACjB,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,eAAK;YAC3B,MAAM,CAAC,KAAK,CAAC,EAAE,IAAI,EAAE;QACvB,CAAC,CAAC;IACN,CAAC;IAED,qCAAa,GAAb,UAAc,MAAM;QAChB,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,eAAK;YACrB,KAAK,CAAC,MAAM,IAAI,SAAS;QAC5B,CAAC,CAAC;IACN,CAAC;IAzEU,aAAa;QAHzB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;;OACW,aAAa,CA2EzB;IAAD,oBAAC;CAAA;AA3EyB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLiB;AACO;AACC;AAKnD;IAEE,0BACY,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IACxB,CAAC;IAIL,sCAAW,GAAX;QACI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,wEAAQ,EAAE,CAAC;IACpC,CAAC;IAED,oCAAS,GAAT;QACI,MAAM,CAAC,IAAI,CAAC,UAAU;IAC1B,CAAC;IAED,oCAAS,GAAT,UAAU,UAAU;QAChB,IAAI,CAAC,UAAU,GAAG,UAAU;IAChC,CAAC;IAlBU,gBAAgB;QAH5B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAIkB,+DAAU;OAHjB,gBAAgB,CAoB5B;IAAD,uBAAC;CAAA;AApB4B;;;;;;;;;;;;;;;;;;;;;;;;;ACPc;AAK3C;IAEE;IAAgB,CAAC;IAEjB,oCAAY,GAAZ,UAAa,OAAO,EAAE,MAAM;QACxB,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,eAAK;YACxB,IAAI,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,aAAG;gBACxB,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,MAAM,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC;YAC1D,CAAC,CAAC;YAClB,IAAI,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,aAAG;gBACtB,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,MAAM,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC;YAC1D,CAAC,CAAC;YAClB,IAAI,UAAU,GAAG,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC,aAAG;gBAC1B,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,MAAM,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC;YACxD,CAAC,CAAC;YAClB,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,MAAM,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC;gBACvD,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,MAAM,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC;gBACnD,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,MAAM,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC;gBACjD,SAAS,CAAC,MAAM,IAAE,CAAC,IAAI,QAAQ,CAAC,MAAM,IAAE,CAAC;mBACtC,UAAU,CAAC,MAAM,IAAE,CAAC;QACzB,CAAC,CAAC;IACN,CAAC;IAED,oCAAY,GAAZ,UAAa,OAAO,EAAE,MAAM;QACxB,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,eAAK;YACxB,IAAI,MAAM,GAAG,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC,eAAK;gBACxB,MAAM,CAAC,KAAK,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,MAAM,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC;oBACxD,KAAK,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,MAAM,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC;YAClE,CAAC,CAAC;YAClB,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,MAAM,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC;gBACzD,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,MAAM,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC;gBACjD,MAAM,CAAC,MAAM,IAAE,CAAC;QAClB,CAAC,CAAC;IACN,CAAC;IAjCU,aAAa;QAHzB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;;OACW,aAAa,CAmCzB;IAAD,oBAAC;CAAA;AAnCyB;;;;;;;;;;;;;;;ACLpB,qBAAsB,OAAO;IAClC,MAAM,CAAC;QACN,OAAO,EAAE,OAAO;KAChB;AACF,CAAC;;;;;;;;;;;;;;ACJD;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;ACdpB;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<ui-view name=\\\"content\\\"></ui-view>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","// ANGULAR MODULES\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule, HttpClientXsrfModule } from '@angular/common/http';\nimport { Pipe, PipeTransform } from '@angular/core';\n\n// INSTALLED MODULES\nimport { DataTableModule } from 'angular-6-datatable';\nimport { UIRouterModule } from '@uirouter/angular';\nimport { NgxMyDatePickerModule } from 'ngx-mydatepicker';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { CollapseModule } from 'ngx-bootstrap/collapse';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { TimepickerModule } from 'ngx-bootstrap/timepicker';\nimport { SatPopoverModule } from '@ncstate/sat-popover';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n// IMPORTED FROM PROJECT\nimport { APP_STATES } from 'app/app.states';\nimport { AppComponent } from 'app/app.component';\nimport { CreateTeamComponent } from 'app/components/forms/create-team/create-team.component';\nimport { JoinTeamComponent } from 'app/components/prompts/join-team/join-team.component';\nimport { SlackLoginComponent } from 'app/components/prompts/slack-login/slack-login.component';\nimport { ScrumboardComponent } from 'app/components/containers/scrumboard/scrumboard.component';\nimport { AvatarComponent } from 'app/components/avatar/avatar.component';\nimport { IssueboardComponent } from 'app/components/containers/issueboard/issueboard.component';\nimport { HeaderComponent } from 'app/components/header/header.component';\nimport { MarkerComponent } from 'app/components/marker/marker.component';\nimport { GroupbyDatePipe } from './pipes/groupby-date.pipe';\nimport { LoginComponent } from './components/forms/login/login.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    JoinTeamComponent,\n    CreateTeamComponent,\n    SlackLoginComponent,\n    ScrumboardComponent,\n    AvatarComponent,\n    IssueboardComponent,\n    HeaderComponent,\n    MarkerComponent,\n    GroupbyDatePipe,\n    LoginComponent,\n  ],\n  imports: [\n    NgbModule.forRoot(),\n    BrowserModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    SatPopoverModule,\n    CollapseModule.forRoot(),\n    BsDatepickerModule.forRoot(),\n    TimepickerModule.forRoot(),\n    HttpClientXsrfModule.withOptions({\n      cookieName: 'csrftoken',\n      headerName: 'X-CSRFToken',\n    }),\n    UIRouterModule.forRoot(APP_STATES),\n    FormsModule,\n    DataTableModule,\n    NgxMyDatePickerModule.forRoot(),\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { ContentOnly } from 'app/utils/layouts.utils'\nimport { CreateTeamComponent } from 'app/components/forms/create-team/create-team.component'\nimport { JoinTeamComponent } from 'app/components/prompts/join-team/join-team.component'\nimport { SlackLoginComponent } from 'app/components/prompts/slack-login/slack-login.component'\nimport { ScrumboardComponent } from 'app/components/containers/scrumboard/scrumboard.component'\nimport { IssueboardComponent } from 'app/components/containers/issueboard/issueboard.component'\nimport { LoginComponent } from 'app/components/forms/login/login.component'\n\n// let CREATE_TEAM_STATE: Object[] = [\n//     {\n//         name: 'create-team',\n//         url: '/create',\n//         views: ContentOnly(CreateTeamComponent),\n//     }\n// ]\n\n// let JOIN_TEAM_STATE: Object[] = [\n//     {\n//         name: 'join-team',\n//         url: '/join',\n//         views: ContentOnly(JoinTeamComponent),\n//     }\n// ]\n\nlet HOME_STATE: Object[] = [\n    {\n        name: 'scrumboard',\n        url: '/',\n        views: ContentOnly(ScrumboardComponent),\n    }\n]\n\nlet ISSUES_STATE: Object[] = [\n    {\n        name: 'issuesboard',\n        url: '/issues',\n        views: ContentOnly(IssueboardComponent),\n    }\n]\n\nlet LOGIN_STATE: Object[] = [\n    {\n        name: 'login',\n        url: '/login',\n        views: ContentOnly(LoginComponent),\n    }\n]\n\nexport const APP_STATES = {\n\totherwise: '/',\n\tstates: [].concat(\n\t\t// CREATE_TEAM_STATE,\n  //       JOIN_TEAM_STATE,\n        HOME_STATE,\n        ISSUES_STATE,\n        LOGIN_STATE\n\t)\n}","module.exports = \".avatar{\\n    color: white\\n}\\n.dot {\\n        height: 42px;\\n        width: 42px;\\n        background-color: blue;\\n    }\"","module.exports = \"<div class=\\\"dot d-flex justify-content-center align-items-center rounded-circle pt-1\\\" [style.background-color]= \\\"getColor(id)\\\">\\n    <b class=\\\"avatar\\\">{{getUsername(username)}}</b>\\n</div>\"","import * as colorGen from 'string-to-color';\nimport { Component, OnInit, Input } from '@angular/core';\nimport { ScrumDataService } from '../../services/scrum-data.service';\n\n@Component({\n  selector: 'app-avatar',\n  templateUrl: './avatar.component.html',\n  styleUrls: ['./avatar.component.css']\n})\nexport class AvatarComponent implements OnInit {\n\n  @Input() id\n  @Input() username\n\n  constructor(\n      private scrumDataService: ScrumDataService,\n  ) { }\n\n  ngOnInit() {\n      \n  }\n\n  getColor(id: string){\n      if(!id){\n          id = 'blue'\n      }\n      return colorGen(id)\n  }\n\n  getUsername(username: string){\n      if(!username){\n          return 'CS'\n      }\n      // try{\n      if( username.indexOf('.') == -1){\n          return username.charAt(0).toUpperCase() + \n                  username.charAt(1).toUpperCase()\n        }\n      var avatar_name = username.split('.');\n      \n      return avatar_name[0].charAt(0).toUpperCase() + \n              avatar_name[1].charAt(0).toUpperCase()\n  }\n}\n","module.exports = \"<div class=\\\"container-fluid\\\">\\n    <div class=\\\"row border-bottom d-flex justify-content-between\\\">\\n        <div class=\\\"m-3 ml-5 pl-5 d-flex align-items-center w-50\\\">\\n            <div class=\\\"tabs clickable\\\">\\n                <span class=\\\"less-emphasis\\\" (click)=\\\"goToDashboard()\\\"><b>Dashboard</b></span>\\n            </div>\\n            <div class=\\\"tabs clickable\\\">\\n                <span class=\\\"less-emphasis\\\"><b>All Issues</b></span>\\n            </div>\\n            <i class=\\\"less-emphasis fas fa-search border-0 m-1 mr-3 ml-5 pl-5\\\"></i>\\n            <input type=\\\"text\\\" placeholder=\\\"Search\\\" class=\\\"border-0 less-emphasis searchbar\\\" (input)=\\\"getScrum(search.value)\\\" #search>\\n        </div>\\n        <div class=\\\"m-3 mr-5\\\">\\n            <app-avatar></app-avatar>\\n        </div>\\n    </div>\\n    <div class=\\\"row issues_container\\\">\\n        <div class=\\\"col p-5 mt-2 ml-5\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"d-flex align-items-center summary_box flex-fill\\\">\\n                    <div class=\\\"marker_static\\\">\\n                    </div>\\n                    <div>\\n                        <p class=\\\"less-emphasis mb-0 ml-2 title\\\">You have 13 unresolve issues</p>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"row pt-4 pb-4 justify-content-between\\\">\\n                <div class=\\\"col d-flex flex-column\\\">\\n                    <div class=\\\"d-flex flex-row align-items-center\\\">\\n                        <span class=\\\"w-25 less-emphasis\\\">Select Project</span>\\n                        <div class=\\\"input-group w-50\\\">\\n                          <select class=\\\"custom-select less-emphasis\\\" (change)=\\\"filter_project=select_project.value\\\" #select_project>\\n                            <option selected value=\\\"\\\">All Projects</option>\\n                            <option *ngFor=\\\"let project of projects\\\">{{ project.name }}</option>\\n                          </select>\\n                        </div>\\n                    </div>\\n                    <br>\\n                    <div class=\\\"d-flex flex-row align-items-center\\\">\\n                        <span class=\\\"w-25 less-emphasis\\\">Members</span>\\n                        <div class=\\\"input-group w-50\\\">\\n                          <select class=\\\"custom-select less-emphasis\\\" (change)=\\\"filter_user=select_user.value\\\" #select_user>\\n                            <option selected value=\\\"\\\">All Members</option>\\n                            <option *ngFor=\\\"let user of users\\\">{{ user.username }}</option>\\n                          </select>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"col d-flex flex-column\\\">\\n                    <div class=\\\"d-flex flex-row-reverse align-items-center\\\">\\n                            <div class=\\\"w-25 input-group date_filters\\\">\\n                                <input class=\\\"form-control datepicker less-emphasis\\\" ngx-mydatepicker name=\\\"to\\\" [(ngModel)]=\\\"to_model\\\" [options]=\\\"toOptions\\\" #to_dp=\\\"ngx-mydatepicker\\\" (dateChanged)=\\\"setDateToFilter($event)\\\"/>\\n                                <span class=\\\"input-group-append\\\">\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-light less-emphasis grey-border\\\" (click)=\\\"to_dp.toggleCalendar()\\\">\\n                                        <i class=\\\"far fa-calendar\\\"></i>\\n                                    </button>\\n                                </span>\\n                            </div>\\n                            <h3 class=\\\"m-0 mr-2 ml-2\\\">-</h3>\\n                            <div class=\\\"w-25 input-group date_filters\\\">\\n                                <input class=\\\"form-control datepicker less-emphasis\\\" ngx-mydatepicker name=\\\"from\\\" [(ngModel)]=\\\"from_model\\\" [options]=\\\"fromOptions\\\" #from_dp=\\\"ngx-mydatepicker\\\" (dateChanged)=\\\"setDateFromFilter($event)\\\"/>\\n                                <span class=\\\"input-group-append\\\">\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-light  less-emphasis grey-border\\\" (click)=\\\"from_dp.toggleCalendar()\\\">\\n                                        <i class=\\\"far fa-calendar\\\"></i>\\n                                    </button>\\n                                </span>\\n                            </div>\\n                        <span class=\\\"less-emphasis mr-4\\\">Date</span>\\n                            <!-- <div class=\\\"input-group\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <div class=\\\"p-2 d-flex align-items-center border rounded-left\\\">\\n                                        <i class=\\\"far fa-calendar\\\"></i>\\n                                    </div>\\n                                </div>\\n                                <input type=\\\"text\\\" ngbDatepicker class=\\\"border border-left-0 form-control\\\" #d=\\\"ngbDatepicker\\\"/>\\n                                <div class=\\\"input-group-append\\\">\\n                                    <button class=\\\"btn btn-light border border-left-0\\\" (click)=\\\"d.toggle()\\\"><i class=\\\"fas fa-chevron-down\\\"></i></button>\\n                                </div>\\n                            </div> -->\\n                    </div>\\n                    <br>\\n                    <div class=\\\"d-flex flex-row-reverse align-items-center\\\">\\n                        <div class=\\\"input-group w-50\\\">\\n                          <select class=\\\"custom-select less-emphasis\\\" (change)=\\\"filter_status=select_status.value\\\" #select_status>\\n                            <option selected value=\\\"\\\">All</option>\\n                            <option value=\\\"P\\\">Pending</option>\\n                            <option value=\\\"R\\\">Resolved</option>\\n                            <option value=\\\"C\\\">Closed</option>\\n                          </select>\\n                        </div>\\n                        <span class=\\\"mr-5 less-emphasis\\\">Status</span>\\n                    </div>\\n                </div>\\n            </div>\\n            <!-- <div class=\\\"row\\\" *ngIf=\\\"filter_user && filter_hours\\\">\\n                <div>\\n                    <h2 class=\\\"p-3 m-0\\\">{{ filter_user }} has logged a total of {{ getTotalHours(filter_user, filter_project, filter_from, filter_to) }} hours <span *ngIf=\\\"filter_project\\\">in project {{ filter_project }}</span> from {{ filter_from | date:'longDate' }} to {{ filter_to | date:'longDate' }}</h2>\\n                </div>\\n            </div> -->\\n            <div class=\\\"row pt-4\\\">\\n                <div class=\\\"col-sm-3\\\">\\n                    <h4><b>Issues list</b></h4>\\n                </div>\\n            </div>\\n            <div class=\\\"row mt-3 \\\">\\n                <div class=\\\"col-4 d-flex justify-content-end pr-5\\\">\\n                    <span class=\\\"category_label\\\"><b>Project Channel</b></span>\\n                </div>\\n                <div class=\\\"col-2\\\"></div>\\n                <div class=\\\"col\\\">\\n                    <span class=\\\"category_label\\\"><b>Issues</b></span>\\n                </div>\\n                <div class=\\\"col d-flex justify-content-end mr-5\\\">\\n                    <span class=\\\"category_label pr-5\\\"><b>Due Date</b></span>\\n                </div>\\n            </div>\\n            <div class=\\\"row mb-3\\\">\\n                <div class=\\\"col-sm-2 d-flex\\\">\\n                    <span class=\\\"align-self-center grey-border less-emphasis\\\">Today - {{ today | date:'longDate'}}</span>\\n                </div>\\n                <div class=\\\"col-sm-10\\\">\\n                    <hr>\\n                </div>\\n            </div>\\n            <div class=\\\"d-flex flex-column m-1 scrumlist\\\">\\n                <div class=\\\"mt-1 mb-1 scrumitem\\\" *ngFor=\\\"let issue of issues\\\">\\n                    <div *ngIf=\\\"(filter_user=='' || issue.scrum_data.user_username==filter_user) && (filter_project=='' || issue.scrum_data.project_name==filter_project) && (filter_status=='' || issue.status==filter_status) && isWithinDate(issue.scrum_data.date_created, filter_from, filter_to)\\\" class=\\\"d-flex align-items-center\\\">\\n                        <app-marker [project]=\\\"issue.scrum_data.project_name\\\"></app-marker>\\n                        <div class=\\\"d-flex flex-fill\\\" >\\n                            <div class=\\\"col-2 d-flex mr-4\\\">\\n                                <div>\\n                                    <app-avatar [username]=\\\"issue.scrum_data.user_username\\\" [id]=\\\"issue.scrum_data.user_username\\\"></app-avatar>\\n                                </div>\\n                                <div class=\\\"ml-3\\\">\\n                                    <span><b>{{ issue.scrum_data.user_username }}</b></span>\\n                                    <br>\\n                                    <span class=\\\"less-emphasis category_label\\\">{{ issue.scrum_data.date_created | date:'shortTime'}} <span *ngIf=\\\"issue.scrum_data.is_edited\\\">(edited)</span></span>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"col-2 d-flex align-items-center mr-5\\\">\\n                                <span class=\\\"project_label\\\">#{{ issue.scrum_data.project_name }}</span>\\n                            </div>\\n                            <div class=\\\"col d-flex p-0 align-items-center\\\">\\n                                <div class=\\\"d-inline-block text-truncate issue_box\\\">\\n                                    <span class=\\\"less-emphasis\\\">{{ issue.issue }}</span>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"col d-flex pr-4 align-items-center justify-content-end\\\">\\n                                <span class=\\\"deadline_label\\\">{{ issue.deadline | date:'mediumDate'}} - {{ issue.deadline | date:'shortTime'}}</span>\\n                            </div>\\n                            <sat-popover #issueDetail verticalAlign=\\\"below\\\" horizontalAlign=\\\"end\\\" forceAlignment>\\n                                <div class=\\\"issue_details\\\">\\n                                    <div class=\\\"d-flex justify-content-between\\\">\\n                                        <div class=\\\"d-flex\\\">\\n                                            <app-avatar [username]=\\\"issue.scrum_data.user_username\\\" [id]=\\\"issue.scrum_data.user_username\\\"></app-avatar>\\n                                            <div class=\\\"ml-3\\\">\\n                                                <span><b>{{ issue.scrum_data.user_username }}</b></span>\\n                                                <br>\\n                                                <span class=\\\"less-emphasis category_label\\\">{{ issue.scrum_data.date_created | date:'shortTime'}} <span *ngIf=\\\"issue.scrum_data.is_edited\\\">(edited)</span></span>\\n                                            </div>\\n                                        </div>\\n                                        <p *ngIf=\\\"issue.is_urgent\\\" class=\\\"urgent p-1 pl-2 pr-2 rounded-left rounded-right\\\">Urgent</p>\\n                                    </div>\\n                                    <div class=\\\"pt-4 pb-4\\\">\\n                                        <p>{{issue.issue}}</p>\\n                                    </div>\\n                                    <div class=\\\"d-flex\\\">\\n                                        <div class=\\\"d-flex flex-column mr-3\\\">\\n                                            <span class=\\\"label less-emphasis pb-2\\\">Date</span>\\n                                            <div class=\\\"input-group\\\">\\n                                            <input type=\\\"text\\\" bsDatepicker class=\\\"form-control border deadline_picker\\\" #deadline_date=\\\"bsDatepicker\\\" [bsConfig]=\\\"{ dateInputFormat: 'MMMM D, YYYY' }\\\" [(ngModel)]=\\\"issue.deadline\\\" (bsValueChange)=\\\"updateDeadline(issue.id, issue.deadline)\\\" [minDate]=\\\"today\\\"/>\\n                                            <div class=\\\"input-group-append\\\">\\n                                                <button class=\\\"btn btn-light border border-left-0\\\" (click)=\\\"deadline_date.toggle()\\\">\\n                                                    <i class=\\\"fas fa-angle-down less-emphasis\\\"></i>\\n                                                </button>\\n                                            </div>\\n                                            </div>\\n                                        </div>\\n                                        <div class=\\\"d-flex flex-column\\\">\\n                                            <span class=\\\"label less-emphasis pb-2\\\">Time</span>\\n                                            <timepicker [(ngModel)]=\\\"issue.deadline\\\" [showSpinners]=\\\"false\\\" minuteStep='1' (isValid)=\\\"updateDeadline(issue.id, issue.deadline)\\\"></timepicker>\\n                                        </div>\\n                                    </div>\\n                                    <div>\\n                                        <button #rButton type=\\\"button\\\" class=\\\"statusbtn btn btn-outline-success m-3 ml-4\\\" (click)=\\\"updateStatus(issue.id, rButton.value)\\\" *ngIf=\\\"issue.status == 'P'\\\" value=\\\"R\\\">Mark as Solved</button>\\n                                        <button #cButton type=\\\"button\\\" class=\\\"statusbtn btn btn-outline-warning m-3\\\" (click)=\\\"updateStatus(issue.id, cButton.value)\\\" *ngIf=\\\"issue.status == 'P'\\\" value=\\\"C\\\">Close</button>\\n                                    </div>\\n                                </div>\\n                            </sat-popover>\\n                            <button type=\\\"button\\\" class=\\\"btn btn-light\\\" [satPopoverAnchorFor]=\\\"issueDetail\\\" (click)=\\\"issueDetail.toggle()\\\"><i class=\\\"fas fa-ellipsis-v less-emphasis\\\"></i>\\n                            </button>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","module.exports = \".issues_container {\\n  margin: 0 120 0 120; }\\n\\n.issue_box {\\n  max-width: 400px; }\\n\\n.issue_details {\\n  background-color: white;\\n  padding: 30px 40px;\\n  box-shadow: 0 3px 8px 0 rgba(111, 126, 147, 0.16); }\\n\\n.marker_static {\\n  width: 5px;\\n  height: 61px;\\n  margin-right: 30;\\n  background-color: #2be5ac; }\\n\\n.summary_box {\\n  background-color: #effffa; }\\n\\n.title {\\n  font-size: 18px;\\n  color: #2be5ac; }\\n\\n.deadline_label {\\n  color: #dd2556; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { DataService } from 'app/services/data.service';\nimport { SearchService } from 'app/services/search.service';\nimport { AuthenticationService } from 'app/services/authentication.service';\nimport { GET_ISSUES,\n          UPDATE_ISSUE_STATUS,\n          UPDATE_ISSUE_DEADLINE } from 'app/constants/endpoints';\nimport { INgxMyDpOptions } from 'ngx-mydatepicker';\nimport { StateService } from '@uirouter/angular';\n\n@Component({\n  selector: 'app-issueboard',\n  templateUrl: './issueboard.component.html',\n  styleUrls: ['./issueboard.component.scss']\n})\nexport class IssueboardComponent implements OnInit {\n\n  today: Date = new Date();\n\n  filter_to: Date = new Date();\n  filter_from: Date = new Date(this.filter_to.getFullYear(),\n                      this.filter_to.getMonth(),\n                      this.filter_to.getDate()-6);\n\n    from_model: any = {\n      date: {\n        year: this.filter_from.getFullYear(),\n        month: this.filter_from.getMonth() + 1,\n        day: this.filter_from.getDate()\n      }\n    };\n\n    to_model: any = {\n      date: {\n        year: this.filter_to.getFullYear(),\n        month: this.filter_to.getMonth() + 1,\n        day: this.filter_to.getDate()\n      }\n    };\n\n  constructor(\n      private http: HttpClient,\n      private searchService: SearchService,\n      private dataService: DataService,\n      private stateService: StateService,\n      private authService: AuthenticationService,\n  ) { }\n\n  issues: any\n  users: {}\n  projects: {}\n\n  filtered_issues: any\n\n  filter_user = ''\n  filter_project = ''\n\n  filter_status = ''\n  \n  from_yesterday = new Date(this.filter_from.getFullYear(),\n                      this.filter_from.getMonth(),\n                      this.filter_from.getDate()-1)\n\n  to_tomorrow = new Date(this.filter_to.getFullYear(),\n                      this.filter_to.getMonth(),\n                      this.filter_to.getDate()+1)\n\n  disabled_from = {\n        year: this.from_yesterday.getFullYear(),\n        month: this.from_yesterday.getMonth() + 1,\n        day: this.from_yesterday.getDate()\n      }\n\n  disabled_to = {\n        year: this.to_tomorrow.getFullYear(),\n        month: this.to_tomorrow.getMonth() + 1,\n        day: this.to_tomorrow.getDate()\n      }\n\n  fromOptions: INgxMyDpOptions = {\n      dateFormat: 'mmm dd yyyy',\n      disableSince: this.disabled_to\n  };\n\n  toOptions: INgxMyDpOptions = {\n      dateFormat: 'mmm dd yyyy',\n      disableUntil: this.disabled_from\n  };\n\n  ngOnInit() {\n      this.authService.authenticate()\n      this.fetchIssues()\n      this.fetchProjects()\n      this.fetchUsers()\n  }\n\n  fetchIssues(){\n      this.dataService.fetchIssues()\n          .subscribe(\n              data => {\n                  this.issues = data\n              }\n          );\n  }\n\n  fetchUsers(){\n      this.dataService.fetchUsers()\n          .subscribe(\n              data => {\n                  this.users = data\n              }\n          );\n  }\n\n  fetchProjects(){\n      this.dataService.fetchProjects()\n          .subscribe(\n              data => {\n                  this.projects = data\n              }\n          );\n  }\n\n  setDateFromFilter(from){\n      this.filter_from = new Date(from.date.year,\n                                  from.date.month-1,\n                                  from.date.day);\n\n      var yesterday = new Date(this.filter_from.getFullYear(),\n                      this.filter_from.getMonth(),\n                      this.filter_from.getDate()-1)\n\n      this.disabled_from.year = yesterday.getFullYear()\n      this.disabled_from.month = yesterday.getMonth()+1\n      this.disabled_from.day = yesterday.getDate()\n  }\n\n  setDateToFilter(to){\n      this.filter_to = new Date(to.date.year,\n                                  to.date.month-1,\n                                  to.date.day);\n\n      var tomorrow = new Date(this.filter_to.getFullYear(),\n                      this.filter_to.getMonth(),\n                      this.filter_to.getDate()+1)\n\n      this.disabled_to.year = tomorrow.getFullYear()\n      this.disabled_to.month = tomorrow.getMonth()+1\n      this.disabled_to.day = tomorrow.getDate()\n  }\n\n  updateStatus(id, status){\n      this.http.post(UPDATE_ISSUE_STATUS(id), {\"status\":status})\n      .subscribe();\n      var index = this.issues.findIndex(issue => {\n         return issue.id == id\n      })\n      this.issues[index].status = status\n  }\n\n  updateDeadline(id, deadline){\n      if (deadline){\n        this.http.post(UPDATE_ISSUE_DEADLINE(id), {\"deadline\":deadline})\n        .subscribe();\n      }\n  }\n\n  isWithinDate(scrum_date, filter_from, filter_to){\n    return (new Date(scrum_date).setHours(0,0,0,0) >= filter_from.setHours(0,0,0,0) &&\n            new Date(scrum_date).setHours(0,0,0,0) <= filter_to.setHours(0,0,0,0))\n  }\n\n  goToDashboard(){\n    this.stateService.go('scrumboard');\n  }\n\n}\n","module.exports = \".hoverable:hover{\\n    background-color: gainsboro;\\n}\\n\\n\\n.check{\\n    color: #2be5ac;\\n}\\n\\n\\n.wip{\\n    color: #ffc455;\\n}\\n\\n\\n.issueitem{\\n    box-shadow: 0 3px 8px 0 rgba(111, 126, 147, 0.16);\\n}\\n\\n\\n.label{\\n    font-size: 14px;\\n}\\n\\n\\n.date_filters{\\n    width: 170px;\\n}\\n\\n\\n.redmarker{\\n  width: 2px;\\n  height: 37px;\\n  background-color: #dd2556;\\n}\\n\\n\\n.scrumlist{\\n    overflow-y: auto;\\n    overflow-x: hidden;\\n}\\n\\n\\n.issuelist{\\n    overflow-y: auto;\\n    overflow-x: hidden;\\n    height: 1350px;\\n}\\n\\n\\n.datepicker{\\n    width: 130px;\\n}\\n\\n\\n.wraplongtext{\\n    word-wrap: break-word;\\n}\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n    <div class=\\\"row border-bottom d-flex justify-content-between\\\">\\n        <div class=\\\"m-3 ml-5 pl-5 d-flex align-items-center w-50\\\">\\n            <div class=\\\"tabs clickable\\\">\\n                <span class=\\\"less-emphasis\\\"><b>Dashboard</b></span>\\n            </div>\\n            <div class=\\\"tabs clickable\\\" (click)=\\\"goToIssues()\\\">\\n                <span class=\\\"less-emphasis\\\"><b>All Issues</b></span>\\n            </div>\\n            <i class=\\\"less-emphasis fas fa-search border-0 m-1 mr-3 ml-5 pl-5\\\"></i>\\n            <input type=\\\"text\\\" placeholder=\\\"Search\\\" class=\\\"border-0 less-emphasis searchbar\\\" (input)=\\\"getScrum(search.value)\\\" #search>\\n        </div>\\n        <div class=\\\"m-3 mr-5\\\">\\n            <app-avatar></app-avatar>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col p-5 mt-2 ml-5\\\">\\n            <div class=\\\"row mt-3\\\">\\n                <h1>Welcome back, {{logged_user}}!</h1>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <p class=\\\"less-emphasis\\\">There are {{ issues?.length }} issues and {{ scrums_bydate?.length }} urgent tickets</p>\\n            </div>\\n                <hr>\\n            <div class=\\\"row pt-4 pb-4\\\">\\n                <div class=\\\"col d-flex flex-column\\\">\\n                    <div class=\\\"d-flex flex-row align-items-center\\\">\\n                        <span class=\\\"w-25 less-emphasis\\\">Select Project</span>\\n                        <div class=\\\"input-group\\\">\\n                          <select class=\\\"custom-select less-emphasis\\\" (change)=\\\"filter_project=select_project.value; filtered_scrum=scrums_bydate\\\" #select_project>\\n                            <option selected value=\\\"\\\">All Projects</option>\\n                            <option *ngFor=\\\"let project of projects\\\">{{ project.name }}</option>\\n                          </select>\\n                        </div>\\n                    </div>\\n                    <br>\\n                    <div class=\\\"d-flex flex-row align-items-center\\\">\\n                        <span class=\\\"w-25 less-emphasis\\\">Members</span>\\n                        <div class=\\\"input-group\\\">\\n                          <select class=\\\"custom-select less-emphasis\\\" (change)=\\\"filter_user=select_user.value; filtered_scrum=scrums_bydate\\\" #select_user>\\n                            <option selected value=\\\"\\\">All Members</option>\\n                            <option *ngFor=\\\"let user of users\\\">{{ user.username }}</option>\\n                          </select>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"col d-flex flex-column\\\">\\n                    <div class=\\\"d-flex flex-row-reverse align-items-center\\\">\\n                            <div class=\\\"input-group date_filters\\\">\\n                                <input class=\\\"form-control datepicker less-emphasis\\\" ngx-mydatepicker name=\\\"to\\\" [(ngModel)]=\\\"to_model\\\" [options]=\\\"toOptions\\\" #to_dp=\\\"ngx-mydatepicker\\\" (dateChanged)=\\\"setDateToFilter($event); filtered_scrum=scrums_bydate\\\"/>\\n                                <span class=\\\"input-group-append\\\">\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-light less-emphasis grey-border\\\" (click)=\\\"to_dp.toggleCalendar()\\\">\\n                                        <i class=\\\"far fa-calendar\\\"></i>\\n                                    </button>\\n                                </span>\\n                            </div>\\n                            <h3 class=\\\"m-0 mr-2 ml-2\\\">-</h3>\\n                            <div class=\\\"input-group date_filters\\\">\\n                                <input class=\\\"form-control datepicker less-emphasis\\\" ngx-mydatepicker name=\\\"from\\\" [(ngModel)]=\\\"from_model\\\" [options]=\\\"fromOptions\\\" #from_dp=\\\"ngx-mydatepicker\\\" (dateChanged)=\\\"setDateFromFilter($event); filtered_scrum=scrums_bydate\\\"/>\\n                                <span class=\\\"input-group-append\\\">\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-light  less-emphasis grey-border\\\" (click)=\\\"from_dp.toggleCalendar()\\\">\\n                                        <i class=\\\"far fa-calendar\\\"></i>\\n                                    </button>\\n                                </span>\\n                            </div>\\n                        <span class=\\\"less-emphasis mr-4\\\">Date</span>\\n                            <!-- <div class=\\\"input-group\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <div class=\\\"p-2 d-flex align-items-center border rounded-left\\\">\\n                                        <i class=\\\"far fa-calendar\\\"></i>\\n                                    </div>\\n                                </div>\\n                                <input type=\\\"text\\\" ngbDatepicker class=\\\"border border-left-0 form-control\\\" #d=\\\"ngbDatepicker\\\"/>\\n                                <div class=\\\"input-group-append\\\">\\n                                    <button class=\\\"btn btn-light border border-left-0\\\" (click)=\\\"d.toggle()\\\"><i class=\\\"fas fa-chevron-down\\\"></i></button>\\n                                </div>\\n                            </div> -->\\n                    </div>\\n                </div>\\n            </div>\\n            <!-- <div class=\\\"row\\\" *ngIf=\\\"filter_user && filter_hours\\\">\\n                <div>\\n                    <h2 class=\\\"p-3 m-0\\\">{{ filter_user }} has logged a total of {{ getTotalHours(filter_user, filter_project, filter_from, filter_to) }} hours <span *ngIf=\\\"filter_project\\\">in project {{ filter_project }}</span> from {{ filter_from | date:'longDate' }} to {{ filter_to | date:'longDate' }}</h2>\\n                </div>\\n            </div> -->\\n            <div class=\\\"row pt-4\\\">\\n                <div class=\\\"col-sm-3\\\">\\n                    <h4><b>Stand up updates</b></h4>\\n                </div>\\n            </div>\\n            <div class=\\\"row mt-3 \\\">\\n                <div class=\\\"col-4 d-flex justify-content-end pr-5\\\">\\n                    <span class=\\\"category_label\\\"><b>Project Channel</b></span>\\n                </div>\\n                <div class=\\\"col-2\\\"></div>\\n                <div class=\\\"col\\\">\\n                    <span class=\\\"category_label\\\"><b>Issues</b></span>\\n                </div>\\n                <div class=\\\"col d-flex justify-content-end mr-4\\\">\\n                    <span class=\\\"category_label\\\"><b>Total Hours</b></span>\\n                </div>\\n            </div>\\n            <div class=\\\"mb-4\\\" *ngFor=\\\"let date_group of filtered_scrum\\\">\\n                <div *ngIf=\\\"isWithinDate(date_group.date_created, filter_from, filter_to)\\\">\\n                    <div class=\\\"row mb-3\\\">\\n                        <div class=\\\"col-sm-2 d-flex\\\">\\n                            <span class=\\\"align-self-center grey-border less-emphasis\\\">{{ date_group.date_created | date:'longDate'}}</span>\\n                        </div>\\n                        <div class=\\\"col-sm-10\\\">\\n                            <hr>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"d-flex flex-column m-1 scrumlist\\\">\\n                        <div class=\\\"mt-1 mb-1 scrumitem\\\" *ngFor=\\\"let scrum of date_group.scrums\\\">\\n                            <div *ngIf=\\\"((filter_user=='' || scrum.user==filter_user) && (filter_project=='' || scrum.project==filter_project))\\\">\\n                                <div class=\\\"d-flex pt-4 pb-4 clickable\\\" (click)=\\\"scrum.open = !scrum.open\\\">\\n                                    <div class=\\\"col-2 d-flex\\\">\\n                                        <div>\\n                                            <app-avatar [username]=\\\"scrum.user\\\" [id]=\\\"scrum.user\\\"></app-avatar>\\n                                        </div>\\n                                        <div class=\\\"ml-3\\\">\\n                                            <span><b>{{ scrum.user }}</b></span>\\n                                            <br>\\n                                            <span class=\\\"less-emphasis category_label\\\">{{ scrum.date_created | date:'shortTime'}} <span *ngIf=\\\"scrum.is_edited\\\">(edited)</span></span>\\n                                        </div>\\n                                    </div>\\n                                    <div class=\\\"col-4 d-flex ml-3 align-items-center\\\">\\n                                        <span class=\\\"project_label\\\" *ngIf=\\\"!scrum.open\\\">#{{ scrum.project }}</span>\\n                                    </div>\\n                                    <div class=\\\"col d-flex p-0 align-items-center\\\">\\n                                        <div *ngIf=\\\"!scrum.open\\\">\\n                                            <span class=\\\"less-emphasis\\\" *ngIf=\\\"!hasPending(scrum)\\\">No issues <img class=\\\"ml-3\\\" src=\\\"https://png.icons8.com/color/30/000000/confetti.png\\\"></span>\\n                                            <span class=\\\"less-emphasis\\\" *ngIf=\\\"hasPending(scrum)\\\">{{ scrum.issue_logs[0].issue }}</span>\\n                                        </div>\\n                                    </div>\\n                                    <div class=\\\"col d-flex pr-4 align-items-center justify-content-end\\\">\\n                                        <span><b>{{ scrum.hours }}</b></span>\\n                                    </div>\\n                                </div>\\n                                <div [collapse]=\\\"!scrum.open\\\">\\n                                    <div class=\\\"d-flex flex-column p-5\\\">\\n                                        <div>\\n                                            <span class=\\\"project_label\\\">#{{ scrum.project }}</span>\\n                                        </div>\\n                                        <br>\\n                                        <div class=\\\"d-flex\\\">\\n                                            <div class=\\\"col pr-4\\\">\\n                                                <div class=\\\"row flex-column mb-5\\\">\\n                                                    <p class=\\\"category_label\\\"><b>Done</b></p>\\n                                                    <div class=\\\"d-flex\\\" *ngFor=\\\"let log of scrum.done_logs\\\">\\n                                                        <i class=\\\"fas fa-check fa-xs check pr-3 pt-1\\\"></i> \\n                                                        <p class=\\\"less-emphasis mb-2\\\">{{ log.message }}</p>\\n                                                    </div>\\n                                                </div>\\n                                                <div class=\\\"row flex-column\\\">\\n                                                    <p class=\\\"category_label\\\"><b>In progress</b></p>\\n                                                    <div class=\\\"d-flex\\\" *ngFor=\\\"let log of scrum.wip_logs\\\">\\n                                                        <i class=\\\"fas fa-circle-notch fa-xs pr-3 pt-1 wip\\\"></i>\\n                                                        <p class=\\\"less-emphasis mb-2\\\" > {{ log.message }}</p>\\n                                                    </div>\\n                                                </div>\\n                                            </div>\\n                                            <div class=\\\"col\\\">\\n                                                <div class=\\\"row flex-column mb-5\\\">\\n                                                    <p class=\\\"category_label\\\"><b>Pending</b></p>\\n                                                    <span class=\\\"less-emphasis\\\" *ngIf=\\\"!hasPending(scrum)\\\">No issues <img class=\\\"ml-3\\\" src=\\\"https://png.icons8.com/color/30/000000/confetti.png\\\"></span>\\n                                                    <div *ngFor=\\\"let issue of scrum.issue_logs\\\" class=\\\"issueitem mb-3 d-flex\\\" >\\n                                                        <div class=\\\"redmarker align-self-center\\\"></div>\\n                                                        <div class=\\\"d-flex flex-column flex-fill\\\">\\n                                                            <div class=\\\"row d-flex flex-column pt-3 pl-4 pr-3 pb-0 ml-2 mr-2 mb-2\\\" (click)=\\\"issue.open = !issue.open\\\">\\n                                                                <div class=\\\"d-flex justify-content-between\\\">\\n                                                                    <p class=\\\"mb-1 ml-2\\\">{{ issue.issue }}</p>\\n                                                                    <div class=\\\"d-flex align-items-center\\\">\\n                                                                        <p *ngIf=\\\"issue.is_urgent\\\" class=\\\"urgent p-1 pl-2 pr-2 rounded-left rounded-right mb-1 mr-2\\\">Urgent</p>\\n                                                                        <i class=\\\"fas fa-angle-down less-emphasis ml-4\\\" *ngIf=\\\"!issue.open\\\"></i>\\n                                                                        <i class=\\\"fas fa-angle-up less-emphasis ml-4\\\" *ngIf=\\\"issue.open\\\"></i>\\n                                                                    </div>\\n                                                                </div>\\n                                                                <div *ngIf=\\\"!issue.open\\\">\\n                                                                    <div class=\\\"d-flex\\\" *ngIf=\\\"issue.deadline\\\">\\n                                                                    <div class=\\\"mr-2\\\">\\n                                                                        <img src=\\\"https://png.icons8.com/metro/15/dd2556/leave.png\\\" class=\\\"ml-2\\\">\\n                                                                    </div>\\n                                                                    <p class=\\\"less-emphasis category_labelel\\\">{{ issue.deadline | date:'longDate'}} - {{ issue.deadline | date:'shortTime'}}</p>\\n                                                                    </div>\\n                                                                </div>\\n                                                            </div>\\n                                                            <div class=\\\"ml-3 mr-2\\\" [collapse]=\\\"!issue.open\\\">\\n                                                                <div class=\\\"d-flex ml-4\\\">\\n                                                                    <div class=\\\"d-flex flex-column mr-3\\\">\\n                                                                        <span class=\\\"label less-emphasis pb-2\\\">Date</span>\\n                                                                        <div class=\\\"input-group\\\">\\n                                                                        <input type=\\\"text\\\" bsDatepicker class=\\\"form-control border deadline_picker\\\" #deadline_date=\\\"bsDatepicker\\\" [bsConfig]=\\\"{ dateInputFormat: 'MMMM D, YYYY' }\\\" [(ngModel)]=\\\"issue.deadline\\\" (bsValueChange)=\\\"updateDeadline(issue.id, issue.deadline)\\\" [minDate]=\\\"today\\\"/>\\n                                                                        <div class=\\\"input-group-append\\\">\\n                                                                            <button class=\\\"btn btn-light border border-left-0\\\" (click)=\\\"deadline_date.toggle()\\\">\\n                                                                                <i class=\\\"fas fa-angle-down less-emphasis\\\"></i>\\n                                                                            </button>\\n                                                                        </div>\\n                                                                        </div>\\n                                                                    </div>\\n                                                                    <div class=\\\"d-flex flex-column\\\">\\n                                                                        <span class=\\\"label less-emphasis pb-2\\\">Time</span>\\n                                                                        <timepicker [(ngModel)]=\\\"issue.deadline\\\" [showSpinners]=\\\"false\\\" minuteStep='1' (isValid)=\\\"updateDeadline(issue.id, issue.deadline)\\\"></timepicker>\\n                                                                    </div>\\n                                                                </div>\\n                                                                <div>\\n                                                                    <button #rButton type=\\\"button\\\" class=\\\"statusbtn btn btn-outline-success m-3 ml-4\\\" (click)=\\\"updateStatus(issue.id, rButton.value)\\\" *ngIf=\\\"issue.status == 'P'\\\" value=\\\"R\\\">Mark as Solved</button>\\n                                                                    <button #cButton type=\\\"button\\\" class=\\\"statusbtn btn btn-outline-warning m-3\\\" (click)=\\\"updateStatus(issue.id, cButton.value)\\\" *ngIf=\\\"issue.status == 'P'\\\" value=\\\"C\\\">Close</button>\\n                                                                </div>\\n                                                            </div>\\n                                                        </div>\\n                                                    </div>\\n                                                </div>\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"col-3 border-left issuelist p-0\\\">\\n            <div class=\\\"row m-4\\\">\\n                <b class=\\\"category_label\\\">Issues stream</b>\\n            </div>\\n            <div class=\\\"d-flex flex-column\\\">\\n                <div *ngFor=\\\"let issue of issues\\\">\\n                    <div class=\\\"d-flex pl-4 pt-3 pb-3 hoverable clickable\\\" (click)=\\\"getIssue(issue.id)\\\" *ngIf=\\\"issue.status=='P'\\\">\\n                        <div class=\\\"d-flex\\\">\\n                            <app-avatar [username]=\\\"issue.scrum_data.user_username\\\" [id]=\\\"issue.scrum_data.user_username\\\"></app-avatar>\\n                        </div>\\n                        <div class=\\\"d-flex flex-fill flex-column ml-3 mr-5\\\">\\n                            <div class=\\\"d-flex justify-content-between mb-1\\\">\\n                                    <p class=\\\"m-0\\\"><b>{{ issue.scrum_data.user_username }}</b></p>\\n                                    <p class=\\\"m-0 project_label label\\\">#{{ issue.scrum_data.project_name }}</p>\\n                                    <p class=\\\"m-0 less-emphasis\\\">{{ issue.scrum_data.date_created | date:'shortTime'}}</p>\\n                            </div>\\n                            <div class=\\\"d-flex flex-fill justify-content-between mb-1 less-emphasis\\\">\\n                                <span>{{ issue.issue }}</span>\\n                                <p *ngIf=\\\"issue.is_urgent\\\" class=\\\"urgent p-1 pl-2 pr-2 rounded-left rounded-right\\\">Urgent</p>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","import * as _ from 'underscore';\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { INgxMyDpOptions } from 'ngx-mydatepicker';\n\nimport { DataService } from 'app/services/data.service';\nimport { ScrumDataService } from 'app/services/scrum-data.service';\nimport { FilterService } from 'app/services/filter.service';\nimport { SearchService } from 'app/services/search.service';\nimport { AuthenticationService } from 'app/services/authentication.service';\nimport { StateService } from '@uirouter/angular';\nimport { GET_ISSUES,\n          UPDATE_ISSUE_STATUS,\n          UPDATE_ISSUE_DEADLINE } from 'app/constants/endpoints';\n\n@Component({\n  selector: 'app-scrumboard',\n  templateUrl: './scrumboard.component.html',\n  styleUrls: ['./scrumboard.component.css']\n})\nexport class ScrumboardComponent implements OnInit {\n\n  today: Date = new Date();\n\n  filter_to: Date = new Date();\n  filter_from: Date = new Date(this.filter_to.getFullYear(),\n                      this.filter_to.getMonth(),\n                      this.filter_to.getDate()-6);\n\n    from_model: any = {\n      date: {\n        year: this.filter_from.getFullYear(),\n        month: this.filter_from.getMonth() + 1,\n        day: this.filter_from.getDate()\n      }\n    };\n\n    to_model: any = {\n      date: {\n        year: this.filter_to.getFullYear(),\n        month: this.filter_to.getMonth() + 1,\n        day: this.filter_to.getDate()\n      }\n    };\n\n\n  constructor(\n      private http: HttpClient,\n      private filterService: FilterService,\n      private searchService: SearchService,\n      private dataService: DataService,\n      private stateService: StateService,\n      private authService: AuthenticationService,\n  ) { }\n\n  scrums_bydate: any\n  issues: any\n  users: {}\n  projects: {}\n\n  filter_user = ''\n  filter_project = ''\n\n  filtered_scrum: any;\n\n  from_yesterday = new Date(this.filter_from.getFullYear(),\n                      this.filter_from.getMonth(),\n                      this.filter_from.getDate()-1)\n\n  to_tomorrow = new Date(this.filter_to.getFullYear(),\n                      this.filter_to.getMonth(),\n                      this.filter_to.getDate()+1)\n\n  disabled_from = {\n        year: this.from_yesterday.getFullYear(),\n        month: this.from_yesterday.getMonth() + 1,\n        day: this.from_yesterday.getDate()\n      }\n\n  disabled_to = {\n        year: this.to_tomorrow.getFullYear(),\n        month: this.to_tomorrow.getMonth() + 1,\n        day: this.to_tomorrow.getDate()\n      }\n\n  fromOptions: INgxMyDpOptions = {\n      dateFormat: 'mmm dd yyyy',\n      disableSince: this.disabled_to\n  };\n\n  toOptions: INgxMyDpOptions = {\n      dateFormat: 'mmm dd yyyy',\n      disableUntil: this.disabled_from\n  };\n\n  model: any = {beginDate: this.from_model.date,\n                        endDate: this.to_model.date};\n\n  show_object = {\n    id: '',\n    show: true,\n  };\n\n  deadline: Date;\n\n  logged_user;\n\n  ngOnInit() {\n      this.authService.authenticate()\n      this.logged_user = localStorage.getItem('user')\n      this.fetchIssues()\n      this.fetchScrums()\n      this.fetchUsers()\n      this.fetchProjects()\n  }\n\n  fetchScrums(){\n      this.dataService.fetchScrums()\n          .subscribe(\n              data => {\n                  this.scrums_bydate = data\n                  var scrums = _.map(this.scrums_bydate, scrum => {return scrum.scrums})\n                  console.log(_.uniq(scrums, true, 'date_created'))\n                  // this.scrums.map(date_group => {\n                  //   date_group.scrums.map(scrum => {\n                  //     scrum.issue_logs.map(issue => {\n                  //                     issue.open = false\n                  //                 })\n                  //     return scrum\n                  //   })\n                  // })\n                  this.filtered_scrum = data\n              }\n          );\n  }\n\n  fetchIssues(){\n      this.dataService.fetchIssues()\n          .subscribe(\n              data => {\n                  this.issues = data\n              }\n          );\n  }\n\n  fetchUsers(){\n      this.dataService.fetchUsers()\n          .subscribe(\n              data => {\n                  this.users = data\n              }\n          );\n  }\n\n  fetchProjects(){\n      this.dataService.fetchProjects()\n          .subscribe(\n              data => {\n                  this.projects = data\n              }\n          );\n  }\n\n  setDateFromFilter(from){\n      this.filter_from = new Date(from.date.year,\n                                  from.date.month-1,\n                                  from.date.day);\n\n      var yesterday = new Date(this.filter_from.getFullYear(),\n                      this.filter_from.getMonth(),\n                      this.filter_from.getDate()-1)\n\n      this.disabled_from.year = yesterday.getFullYear()\n      this.disabled_from.month = yesterday.getMonth()+1\n      this.disabled_from.day = yesterday.getDate()\n  }\n\n  setDateToFilter(to){\n      this.filter_to = new Date(to.date.year,\n                                  to.date.month-1,\n                                  to.date.day);\n\n      var tomorrow = new Date(this.filter_to.getFullYear(),\n                      this.filter_to.getMonth(),\n                      this.filter_to.getDate()+1)\n\n      this.disabled_to.year = tomorrow.getFullYear()\n      this.disabled_to.month = tomorrow.getMonth()+1\n      this.disabled_to.day = tomorrow.getDate()\n  }\n\n  getIssue(id){\n      this.filtered_scrum = [this.scrums_bydate.find(scrum => {\n          return scrum.issue_logs.find(issue => {\n                     return issue.id == id\n                  })\n      })]\n  }\n\n  updateStatus(id, status){\n      this.http.post(UPDATE_ISSUE_STATUS(id), {\"status\":status})\n      .subscribe();\n      var index = this.issues.findIndex(issue => {\n         return issue.id == id\n      })\n      this.issues[index].status = status\n      var group_index = this.scrums_bydate.findIndex(scrum => {\n        return scrum.scrums.find(scrum =>{\n           return scrum.issue_logs.find(issue => {\n               return issue.id == id\n            })\n        })\n      })\n      var scrum_index = this.scrums_bydate[group_index].scrums.findIndex(scrum => {\n         return scrum.issue_logs.find(issue => {\n             return issue.id == id\n          })\n      })\n      var issue_index = this.scrums_bydate[group_index].scrums[scrum_index].issue_logs.findIndex(issue => {\n         return issue.id == id\n      })\n      this.scrums_bydate[group_index].scrums[scrum_index].issue_logs.splice(issue_index,1)\n  }\n\n  updateDeadline(id, deadline){\n      if (deadline){\n        this.http.post(UPDATE_ISSUE_DEADLINE(id), {\"deadline\":deadline})\n        .subscribe();\n      }\n  }\n\n  isWithinDate(scrum_date, filter_from, filter_to){\n    return (new Date(scrum_date).setHours(0,0,0,0) >= filter_from.setHours(0,0,0,0) &&\n            new Date(scrum_date).setHours(0,0,0,0) <= filter_to.setHours(0,0,0,0))\n  }\n\n  getTotalHours(user, project, from, to){\n    var filtered_data = this.filterService.filterScrum(user, project, from, to, this.scrums_bydate)\n    return filtered_data.map(scrum => scrum.hours).reduce((x,y) => (+x)+(+y), 0)\n  }\n\n  getScrum(keyword){\n    this.filtered_scrum = this.searchService.searchScrums(keyword, this.scrums_bydate)\n  }\n\n  // hasIssues(scrum){\n  //   var pending = scrum.issue_logs.filter(issue =>{\n  //                      return issue.status == 'Pending'\n  //                 })\n  //   var resolved = scrum.issue_logs.filter(issue =>{\n  //                      return issue.status == 'Resolved'\n  //                 })\n  //   var closed = scrum.issue_logs.filter(issue =>{\n  //                      return issue.status == 'Closed'\n  //                 })\n  //   return (this.filter_pending && pending.length!=0) ||\n  //           (this.filter_resolved && resolved.length!=0) ||\n  //           (this.filter_closed && closed.length!=0)\n  // }\n\n  hasPending(scrum){\n    var pending = scrum.issue_logs.filter(issue => {\n                       return issue.status == 'P'\n                  })\n    return (pending.length!=0)\n  }\n\n  goToIssues(){\n    this.stateService.go('issuesboard');\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<form (ngSubmit)=\\\"createTeam(createTeamForm)\\\" #createTeamForm=\\\"ngForm\\\">\\n    <input type=\\\"text\\\" name=\\\"name\\\" ngModel>\\n    <button type=\\\"submit\\\">create</button>\\n</form>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\n\nimport { ApiService } from '../../../services/api.service';\n\n@Component({\n  selector: 'app-create-team',\n  templateUrl: './create-team.component.html',\n  styleUrls: ['./create-team.component.css']\n})\nexport class CreateTeamComponent implements OnInit {\n\n  constructor(\n      private apiService: ApiService\n  ) { }\n\n  ngOnInit() {\n    \n  }\n\n  createTeam(createTeamForm: NgForm){\n      this.apiService.create('accounts', createTeamForm.value);\n  }\n}\n","module.exports = \"<div class=\\\"d-flex justify-content-center align-items-center login_container flex-column\\\">\\n    <h1 class=\\\"pb-4\\\">LOGIN TO SCRUMBOARD</h1>\\n    <p *ngIf=\\\"invalid_message\\\">{{invalid_message}}</p>\\n    <form class=\\\"d-flex flex-column justify-content-center\\\">\\n        <div class=\\\"form-group login_form\\\">\\n            <label>Username</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Username\\\" #username>\\n        </div>\\n        <div class=\\\"form-group login_form\\\">\\n            <label for=\\\"exampleInputPassword1\\\">Password</label>\\n            <input type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Password\\\" #password>\\n        </div>\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4\\\" (click)=\\\"login(username,password)\\\">Login</button>\\n    </form>\\n</div>\"","module.exports = \".login_container {\\n  height: 500px; }\\n\\n.login_form {\\n  width: 400px; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { StateService } from '@uirouter/angular';\nimport { AuthenticationService } from 'app/services/authentication.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor(\n      private stateService: StateService,\n      private authService: AuthenticationService,\n  ) { }\n\n  ngOnInit() {\n      if(localStorage.getItem('user')){\n        this.stateService.go('scrumboard')\n      }\n  }\n\n  invalid_message;\n\n  login(username, password){\n        this.authService.loginUser({\"username\":username.value, \"password\":password.value})\n                .subscribe(()=>{\n                    localStorage.setItem('user',username.value)\n                    this.stateService.go('scrumboard')},\n                    ()=>{\n                    this.invalid_message=\"INVALID USERNAME OR PASSWORD\"\n                    }\n                )\n  }\n\n\n}\n","module.exports = \"<div class=\\\"row border-bottom d-flex justify-content-between\\\">\\n    <div class=\\\"m-3 ml-5 d-flex align-items-center w-50\\\">\\n        <i class=\\\"less-emphasis fas fa-search border-0 m-1 mr-3\\\"></i>\\n        <input type=\\\"text\\\" placeholder=\\\"Search\\\" class=\\\"border-0 less-emphasis searchbar\\\" (input)=\\\"getScrum(search.value)\\\" #search>\\n    </div>\\n    <div class=\\\"m-3 mr-5\\\">\\n        <app-avatar></app-avatar>\\n    </div>\\n</div>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"marker\\\" [style.background-color]= \\\"getColor(project)\\\">\\n</div>\"","module.exports = \".marker {\\n  width: 7px;\\n  height: 86px;\\n  margin-right: 20; }\\n\"","import * as colorGen from 'string-to-color';\nimport { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-marker',\n  templateUrl: './marker.component.html',\n  styleUrls: ['./marker.component.scss']\n})\nexport class MarkerComponent implements OnInit {\n\n  @Input() project\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  getColor(project: string){\n      if(!project){\n          project = 'light-green'\n      }\n      return colorGen(project)\n  }\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  join-team works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-join-team',\n  templateUrl: './join-team.component.html',\n  styleUrls: ['./join-team.component.css']\n})\nexport class JoinTeamComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<a href=\\\"https://slack.com/oauth/authorize?scope=identity.basic&client_id=398793025732.401722165671\\\">\\n    ADD TO SLACK\\n</a>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-slack-login',\n  templateUrl: './slack-login.component.html',\n  styleUrls: ['./slack-login.component.css']\n})\nexport class SlackLoginComponent implements OnInit {\n\n  constructor() { }\n\n  client_id: ''\n\n  ngOnInit() {\n      \n  }\n\n}\n","var team_id = 'TBQPB0RMJ'\n\nexport const GET_LOGS = () => '/api/scrum/';\nexport const GET_ISSUES = () => '/api/scrum/issues/';\nexport const GET_TEAM_MEMBERS = () => '/api/accounts/users/'+team_id+'/';\nexport const GET_TEAM_PROJECTS = () => '/api/accounts/projects/'+team_id+'/';\nexport const UPDATE_ISSUE_STATUS = (id) => '/api/scrum/update_status/'+id;\nexport const UPDATE_ISSUE_DEADLINE = (id) => '/api/scrum/update_deadline/'+id;\nexport const LOGIN_USER = () => '/api/accounts/login/';\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'groupbyDate'\n})\nexport class GroupbyDatePipe implements PipeTransform {\n\n  transform(array: Object[], property: string): any {\n      if(!array){\n          return null;\n      }\n      \n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { StateService } from '@uirouter/angular'\n\n// import { API_CREATE } from '../constants/endpoints';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  constructor(\n      private http: HttpClient,\n      private stateService: StateService\n  ) { }\n\n  users={}\n\n  set_list(endpoint){\n      this.http.get(endpoint)\n          .subscribe(\n              data => {\n                  this.users = data\n              }\n          );\n  }\n\n  get_list(){\n    return this.users\n  }\n\n  create(api_name, data){\n      // var request = this.http.post(API_CREATE(api_name),data)\n      // this.http.post(API_CREATE(api_name), data)\n      // .subscribe(\n      //     data => console.log(data),\n      //     error => this.stateService.go('join-team')\n      // );\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { StateService } from '@uirouter/angular';\n\nimport { LOGIN_USER } from 'app/constants/endpoints';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n\n  constructor(\n      private stateService: StateService,\n      private http: HttpClient,\n  ) { }\n\n  loginUser(credentials){\n      return this.http.post(LOGIN_USER(),credentials)\n  }\n  \n  authenticate(){\n      if(!localStorage.getItem('user')){\n        this.stateService.go('login')\n      }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { GET_LOGS,\n        GET_ISSUES,\n        GET_TEAM_MEMBERS,\n        GET_TEAM_PROJECTS } from 'app/constants/endpoints';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  constructor(\n      private http: HttpClient,\n  ) { }\n\n  users: {}\n  projects: {}\n  scrum_data: any\n\n  fetchScrums(){\n      return this.http.get(GET_LOGS())\n  }\n\n  fetchUsers(){\n      return this.http.get(GET_TEAM_MEMBERS())\n  }\n\n  fetchProjects(){\n      return this.http.get(GET_TEAM_PROJECTS())\n  }\n\n  fetchIssues(){\n      return this.http.get(GET_ISSUES())\n  }\n\n  getScrums(){\n      return this.scrum_data\n  }\n\n  getUsers(){\n      return this.users\n  }\n\n  getProjects(){\n      return this.projects\n  }\n\n  setScrums(scrum_data){\n      this.scrum_data = scrum_data\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FilterService {\n\n  constructor() { }\n\n  log_type = ''\n\n  filterScrum(username, project, from, to, scrums){\n      return scrums.filter(scrum => {\n        var date = new Date(scrum.date_created)\n        date.setHours(0,0,0,0)\n        return scrum.user.includes(username) && \n        scrum.project.includes(project) && \n        (date >= from && date <= to)\n      })\n  }\n\n  filterScrumSearch(keyword, scrums){\n      return scrums.filter(scrum => {\n        var date = new Date(scrum.date_created)\n        date.setHours(0,0,0,0)\n        var done_logs = scrum.done_logs.filter(log=>{\n                          return log.message.search(new RegExp(keyword, 'i')) >= 0 \n                        })\n        var wip_logs = scrum.wip_logs.filter(log=>{\n                          return log.message.search(new RegExp(keyword, 'i')) >= 0 \n                        })\n        var issue_logs = scrum.issue_logs.filter(log=>{\n                          return log.issue.search(new RegExp(keyword, 'i')) >= 0  ||\n                          log.status.search(new RegExp(keyword, 'i')) >= 0 \n                        })\n        return scrum.user.search(new RegExp(keyword, 'i')) >= 0 || \n        scrum.project.search(new RegExp(keyword, 'i')) >= 0  ||\n        done_logs.length!=0 || wip_logs.length!=0 ||\n        issue_logs.length!=0\n      })\n  }\n\n  filterIssues(status, dateFilterForm, username, project, issues){\n      if (status === 'ALL') {\n        status = ''\n      }\n\n      if (username === 'ALL') {\n        username = ''\n      }\n\n      if (project === 'ALL') {\n        project = ''\n      }\n\n      var from = new Date(dateFilterForm.from.date.month + \"/\" + dateFilterForm.from.date.day + \"/\" + dateFilterForm.from.date.year)\n      var to = new Date(dateFilterForm.to.date.month + \"/\" + dateFilterForm.to.date.day + \"/\" + dateFilterForm.to.date.year)\n\n      return issues.filter(issue => {\n        var date = new Date(issue.date_created)\n        date.setHours(0,0,0,0)\n        return issue.status.includes(status) &&\n        issue.user.includes(username) && \n        issue.project.includes(project) && \n        (date >= from && date <= to)\n      })\n  }\n\n  filterById(id, issues){\n      return issues.findIndex(issue => {\n        return issue.id == id\n      })\n  }\n\n  filterPending(issues){\n      return issues.find(issue => {\n         issue.status == \"Pending\"\n      })\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { GET_LOGS } from 'app/constants/endpoints';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ScrumDataService {\n\n  constructor(\n      private http: HttpClient,\n  ) { }\n  \n  scrum_data: any\n\n  fetchScrums(){\n      return this.http.get(GET_LOGS())\n  }\n\n  getScrums(){\n      return this.scrum_data\n  }\n\n  setScrums(scrum_data){\n      this.scrum_data = scrum_data\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SearchService {\n\n  constructor() { }\n\n  searchScrums(keyword, scrums){\n      return scrums.filter(scrum => {\n        var done_logs = scrum.done_logs.filter(log=>{\n                          return log.message.search(new RegExp(keyword, 'i')) >= 0 \n                        })\n        var wip_logs = scrum.wip_logs.filter(log=>{\n                          return log.message.search(new RegExp(keyword, 'i')) >= 0 \n                        })\n        var issue_logs = scrum.issue_logs.filter(log=>{\n                          return log.issue.search(new RegExp(keyword, 'i')) >= 0\n                        })\n        return scrum.user.search(new RegExp(keyword, 'i')) >= 0 || \n        scrum.project.search(new RegExp(keyword, 'i')) >= 0  ||\n        scrum.hours.search(new RegExp(keyword, 'i')) >= 0 ||\n        done_logs.length!=0 || wip_logs.length!=0\n        || issue_logs.length!=0\n      })\n  }\n\n  searchIssues(keyword, issues){\n      return issues.filter(issue => {\n        var scrums = issue.scrum_data.filter(scrum=>{\n                          return scrum.user_username.search(new RegExp(keyword, 'i')) >= 0 ||\n                                  scrum.project_name.search(new RegExp(keyword, 'i')) >= 0 \n                        })\n        return issue.status.search(new RegExp(keyword, 'i')) >= 0 || \n        issue.issue.search(new RegExp(keyword, 'i')) >= 0  ||\n        scrums.length!=0\n      })\n  }\n\n}\n","export function ContentOnly(content){\n\treturn {\n\t\tcontent: content\n\t}\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}